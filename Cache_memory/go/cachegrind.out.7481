cmd: ./nested_loops
events: Ir
fl=./<autogenerated>
fn=errors.init
1 1
fn=io/fs.init
1 1
fn=os.init
1 1
fn=reflect.init
1 1
fn=runtime.args.abi0
1 10
fn=runtime.check.abi0
1 2
fn=runtime.init
1 1
fn=runtime.mstart0.abi0
1 12
fn=runtime.newproc.abi0
1 8
fn=runtime.newstack.abi0
1 346
fn=runtime.osinit.abi0
1 2
fn=runtime.schedinit.abi0
1 2
fn=runtime.wbBufFlush.abi0
1 46
fn=sync.init
1 1
fn=syscall.init
1 1
fn=time.init
1 1
fn=unicode.init
1 1
fl=/home/lphant/Documentos/GitHub/parallel-computing-labs/Cache_memory/go/nested_loops.go
fn=main.columnMajorAccess
25 126
26 21
28 472731
29 1281808500
30 2563050000
35 42
36 336
37 462
38 63
fn=main.main
40 8
41 1
42 2
46 7
48 1
49 8
51 17
53 150
54 126
55 472584
56 1395256
57 1281808500
58 4271750000
62 94584
63 126
64 105
67 5
68 11
fn=main.main.deferwrap1
46 13
fn=main.main.deferwrap2
49 12
fn=main.rowMajorAccess
10 126
11 21
13 472731
14 1708983500
15 2563050000
20 42
21 294
22 861
23 63
fl=/usr/lib/go-1.22/src/bufio/bufio.go
fn=bufio.(*Writer).Flush
632 5
633 4
636 3
639 10
640 7
643 2
651 1
652 5
fn=bufio.(*Writer).WriteByte
656 174
698 435
699 261
702 174
705 522
706 87
707 435
fn=bufio.(*Writer).WriteRune
712 220
714 88
715 44
716 88
719 264
fn=bufio.(*Writer).WriteString
656 522
744 522
749 783
768 261
771 1218
772 261
773 261
774 435
fn=main.main
595 4
596 8
597 4
605 1
fl=/usr/lib/go-1.22/src/encoding/csv/reader.go
fn=encoding/csv.(*Writer).Write
98 516
fl=/usr/lib/go-1.22/src/encoding/csv/writer.go
fn=encoding/csv.(*Writer).Write
50 258
51 86
55 1303
56 174
57 308
64 741
65 609
115 86
118 172
120 301
fn=encoding/csv.(*Writer).fieldNeedsQuotes
160 522
161 372
162 84
165 132
169 330
170 1482
171 450
172 3600
182 198
183 264
fn=main.main
40 5
41 1
42 2
fn=main.main.deferwrap2
126 3
fl=/usr/lib/go-1.22/src/errors/wrap.go
fn=errors.init
147 13
fl=/usr/lib/go-1.22/src/fmt/format.go
fn=fmt.(*fmt).fmtFloat
491 504
493 420
497 168
498 588
501 84
505 252
510 672
523 168
580 588
593 840
594 252
fn=fmt.(*fmt).fmtInteger
194 378
195 945
196 63
200 189
203 189
208 63
216 126
226 126
229 63
236 126
239 63
240 189
241 693
242 378
243 567
244 1323
253 63
268 63
269 441
270 504
276 315
297 126
304 63
307 126
310 126
311 189
317 126
318 63
319 693
320 189
321 189
fn=fmt.(*fmt).fmtS
325 44
357 132
359 22
360 66
fn=fmt.(*fmt).pad
90 735
91 588
92 294
93 441
fn=fmt.(*fmt).padString
108 110
109 88
110 44
111 66
fn=fmt.(*pp).doPrintf
55 294
fn=fmt.newPrinter
55 254
59 453
60 127
fl=/usr/lib/go-1.22/src/fmt/print.go
fn=fmt.(*fmt).pad
104 3462
fn=fmt.(*fmt).padString
108 493
fn=fmt.(*pp).doPrintf
108 3468
1019 630
1023 315
1024 735
1025 1281
1026 630
1028 9051
1029 945
1031 567
1032 1068
1034 189
1040 381
1043 147
1045 567
1046 420
1047 147
1048 147
1050 294
1052 294
1054 294
1062 1029
1064 294
1067 294
1075 882
1076 294
1077 294
1078 147
1182 693
1185 1344
1199 315
fn=fmt.(*pp).doPrintln
112 154
1216 132
1217 374
1218 44
1219 22
1221 88
1223 22
1224 66
fn=fmt.(*pp).fmtFloat
452 420
453 168
456 252
458 252
459 420
465 252
fn=fmt.(*pp).fmtInteger
421 315
422 126
429 126
430 630
433 63
439 63
448 189
fn=fmt.(*pp).fmtString
488 132
489 22
490 44
491 44
494 88
496 44
502 22
507 66
fn=fmt.(*pp).free
161 635
169 254
172 127
174 254
178 562
179 326
180 127
181 508
182 381
fn=fmt.(*pp).printArg
681 1352
682 772
683 434
685 1183
698 507
701 338
707 1183
712 420
713 252
718 252
719 189
740 110
741 22
762 507
fn=fmt.Fprintf
222 210
223 126
224 252
225 546
226 84
227 546
fn=fmt.Fprintln
302 110
303 44
304 88
305 286
306 44
307 242
fn=fmt.Sprintf
237 315
238 126
239 378
240 441
241 126
242 630
fn=fmt.init.func1
147 180
fn=fmt.newPrinter
151 635
152 635
153 127
154 127
155 127
156 127
157 508
fn=main.columnMajorAccess
233 189
fn=main.main
314 132
fn=main.rowMajorAccess
233 168
fl=/usr/lib/go-1.22/src/internal/abi/type.go
fn=internal/reflectlite.elem
169 2
353 1
357 1
360 2
363 2
365 1
fn=runtime.SetFinalizer
233 4
515 8
524 16
525 4
533 4
534 8
538 12
539 4
541 48
545 12
fl=/usr/lib/go-1.22/src/internal/bytealg/equal_amd64.s
fn=memeqbody
46 16
47 16
48 9
49 9
112 9
113 9
114 9
115 9
116 9
117 9
118 9
119 9
120 9
121 9
122 9
133 7
134 7
136 7
137 7
139 7
140 7
143 7
144 7
152 7
153 7
154 7
155 7
161 7
162 7
164 7
165 7
fn=runtime.memequal
14 16
15 16
19 16
20 16
21 16
22 16
fl=/usr/lib/go-1.22/src/internal/bytealg/index_amd64.go
fn=internal/bytealg.init.0
12 2
13 2
17 1
fl=/usr/lib/go-1.22/src/internal/bytealg/indexbyte_amd64.s
fn=indexbytebody
32 144
33 144
34 144
35 144
37 144
38 144
40 144
42 144
43 144
45 65
46 65
51 285
53 285
55 285
57 285
58 285
60 223
62 288
63 288
67 3
68 3
69 3
70 3
71 3
72 3
75 3
76 3
83 62
84 62
85 62
86 62
122 141
123 141
125 79
126 79
127 237
131 170
132 170
133 170
134 170
135 92
136 92
137 92
138 1
139 1
140 1
141 1
142 1
148 79
149 79
150 79
151 79
152 79
153 79
154 79
fn=internal/bytealg.IndexByteString.abi0
18 144
19 144
20 144
21 144
22 144
fl=/usr/lib/go-1.22/src/internal/chacha8rand/chacha8.go
fn=internal/chacha8rand.(*State).Init
51 5
52 1
53 1
54 1
55 1
56 1
58 4
62 4
63 5
64 2
65 2
182 4
fn=internal/chacha8rand.(*State).Reseed
42 24
43 96
46 48
47 72
62 24
63 30
64 12
65 12
100 30
101 18
102 120
103 24
105 48
106 24
112 6
113 18
fn=runtime.bootstrapRand
42 40
43 80
46 80
47 160
fn=runtime.mrandinit
62 18
63 66
64 12
65 12
fn=runtime.rand
42 9
43 18
46 18
47 18
fl=/usr/lib/go-1.22/src/internal/chacha8rand/chacha8_amd64.s
fn=internal/chacha8rand.block
55 39
61 39
62 39
63 39
64 39
71 13
72 13
73 13
74 13
75 13
76 13
77 13
78 13
81 39
82 39
83 39
84 39
85 39
86 39
87 39
88 39
96 13
97 13
98 13
99 13
102 13
104 1248
105 52
106 1248
107 52
108 1248
109 1248
111 1248
112 52
113 1248
114 52
115 1248
116 1248
118 52
119 52
125 13
126 13
127 13
128 13
129 13
130 13
131 13
136 26
137 26
138 26
139 26
140 26
141 26
142 26
143 26
144 13
145 13
146 13
147 13
148 13
149 13
150 13
151 13
152 13
153 13
154 13
155 13
156 13
157 13
158 13
159 13
161 13
162 13
164 39
fl=/usr/lib/go-1.22/src/internal/cpu/cpu.go
fn=internal/cpu.Initialize
128 5
129 1
130 3
131 5
fn=internal/cpu.processOptions
153 7
154 2
155 2
203 100
204 19
215 3
fl=/usr/lib/go-1.22/src/internal/cpu/cpu_x86.go
fn=internal/cpu.doinit
53 5
54 8
55 5
56 5
57 5
58 5
59 5
60 5
62 6
63 2
66 63
73 3
76 63
83 3
86 36
93 7
95 2
99 7
101 7
103 2
104 2
105 2
106 2
107 2
108 2
109 2
114 1
120 2
125 1
126 4
128 3
134 4
137 2
139 4
143 5
144 2
145 4
146 3
147 3
148 3
149 3
151 7
152 1
158 6
160 1
164 6
165 2
166 3
169 17
fl=/usr/lib/go-1.22/src/internal/cpu/cpu_x86.s
fn=internal/cpu.cpuid.abi0
11 6
12 6
13 6
14 6
15 6
16 6
17 6
18 6
fn=internal/cpu.getGOAMD64level.abi0
39 1
43 1
fn=internal/cpu.xgetbv.abi0
22 1
23 1
24 1
25 1
26 1
fl=/usr/lib/go-1.22/src/internal/poll/errno_unix.go
fn=internal/poll.(*pollDesc).init
22 1
29 2
32 3
fl=/usr/lib/go-1.22/src/internal/poll/fd_mutex.go
fn=internal/poll.(*FD).Write
239 650
fn=internal/poll.(*FD).decref
103 2
104 2
105 2
108 1
109 5
110 2
211 5
212 2
213 5
fn=internal/poll.(*FD).writeUnlock
248 325
249 455
252 195
fn=internal/poll.(*fdMutex).increfAndClose
71 5
72 4
73 1
74 3
78 3
79 2
83 2
84 6
87 4
91 3
95 4
fn=internal/poll.(*fdMutex).rwlock
117 325
120 260
129 325
132 65
133 130
137 325
139 195
140 130
145 65
146 65
150 325
151 65
152 260
154 65
fn=internal/poll.(*fdMutex).rwunlock
162 325
165 195
174 390
177 130
178 260
182 260
183 260
184 130
186 325
187 65
190 390
fl=/usr/lib/go-1.22/src/internal/poll/fd_poll_runtime.go
fn=internal/poll.(*FD).Close
58 4
fn=internal/poll.(*FD).Write
77 260
fn=internal/poll.(*FD).destroy
49 3
fn=internal/poll.(*pollDesc).init
38 5
39 1
40 3
41 2
42 6
fn=internal/poll.(*pollDesc).prepare
64 325
65 195
66 325
fl=/usr/lib/go-1.22/src/internal/poll/fd_unix.go
fn=internal/poll.(*FD).Close
90 5
91 6
100 1
104 1
112 3
116 3
fn=internal/poll.(*FD).Init
54 24
55 4
58 21
59 4
61 4
62 3
63 15
65 5
66 2
69 2
71 3
fn=internal/poll.(*FD).Write
366 650
367 195
370 650
371 715
377 455
378 65
380 1235
381 130
382 130
384 260
385 845
735 65
736 65
737 195
fn=internal/poll.(*FD).Write.deferwrap1
370 910
fn=internal/poll.(*FD).destroy
76 5
79 1
81 1
83 2
84 4
85 5
fl=/usr/lib/go-1.22/src/internal/poll/fd_unixjs.go
fn=internal/poll.(*FD).destroy
24 6
fl=/usr/lib/go-1.22/src/internal/reflectlite/type.go
fn=errors.init
401 1
404 1
656 3
fn=internal/reflectlite.elem
319 5
320 1
321 2
322 4
fn=internal/reflectlite.rtype.Elem
327 5
328 7
656 4
fl=/usr/lib/go-1.22/src/internal/syscall/unix/fcntl_unix.go
fn=internal/syscall/unix.Fcntl
19 15
20 3
21 6
24 18
fl=/usr/lib/go-1.22/src/internal/syscall/unix/nonblocking_unix.go
fn=os.NewFile
20 3
fn=os.openFileNolog
20 2
fl=/usr/lib/go-1.22/src/internal/testlog/log.go
fn=internal/testlog.Open
43 3
44 2
58 6
59 4
62 3
fl=/usr/lib/go-1.22/src/io/fs/fs.go
fn=io/fs.init
143 6
144 6
145 6
146 6
147 8
fn=os.openFileNolog
241 2
fl=/usr/lib/go-1.22/src/math/exp_amd64.go
fn=math.init
11 6
fl=/usr/lib/go-1.22/src/math/unsafe.go
fn=strconv.genericFtoa
23 168
fl=/usr/lib/go-1.22/src/os/error.go
fn=os.init
19 6
21 6
22 7
23 6
24 6
26 6
27 6
fl=/usr/lib/go-1.22/src/os/file.go
fn=main.main
363 6
fn=os.(*File).Write
185 390
186 195
189 65
190 130
193 325
194 130
197 65
199 130
200 65
203 455
fn=os.OpenFile
372 5
373 1
374 6
375 6
378 4
380 5
fn=os.init
65 7
66 7
67 11
fl=/usr/lib/go-1.22/src/os/file_open_unix.go
fn=os.open
14 6
15 1
16 6
fl=/usr/lib/go-1.22/src/os/file_posix.go
fn=main.main.deferwrap1
20 2
23 2
fn=os.(*File).Write
46 390
236 390
fn=os.openFileNolog
61 1
62 2
63 2
65 1
66 2
68 1
69 2
fl=/usr/lib/go-1.22/src/os/file_unix.go
fn=os.(*File).Write
249 520
fn=os.(*file).close
306 5
307 3
310 3
315 4
323 7
324 7
fn=os.NewFile
105 18
107 15
113 15
114 3
117 6
119 24
120 12
121 9
fn=os.newFile
167 20
168 28
170 8
171 4
172 4
174 28
175 44
178 38
213 4
214 2
218 7
219 3
233 59
234 6
235 4
239 23
240 16
fn=os.openFileNolog
260 5
270 5
272 9
273 1
297 3
301 6
302 7
303 2
fl=/usr/lib/go-1.22/src/os/proc.go
fn=os.init.0
18 4
23 6
24 2
fl=/usr/lib/go-1.22/src/reflect/type.go
fn=reflect.init
1169 3
fl=/usr/lib/go-1.22/src/reflect/value.go
fn=reflect.init
305 10
1402 8
1798 10
fl=/usr/lib/go-1.22/src/runtime/alg.go
fn=runtime.alginit
380 5
383 2
384 2
385 2
386 1
387 3
399 2
402 67
403 64
fl=/usr/lib/go-1.22/src/runtime/arena.go
fn=runtime.SetFinalizer
746 10
747 10
750 5
fn=runtime.init.0
204 5
208 8
221 3
fl=/usr/lib/go-1.22/src/runtime/asm.s
fn=runtime.mapinitnoop
14 4
fl=/usr/lib/go-1.22/src/runtime/asm_amd64.s
fn=_rt0_amd64
16 1
17 1
18 1
fn=aeshashbody
1230 9
1231 9
1232 9
1233 9
1234 9
1235 9
1237 9
1238 9
1249 9
1250 9
1252 9
1253 9
1254 9
1258 9
1259 9
1260 9
1261 9
1263 9
1264 9
1265 9
1266 9
1267 9
1268 9
fn=gcWriteBarrier
1739 58800
1742 19600
1743 19600
1747 19623
1748 19623
1750 19623
1751 19623
1753 19623
1754 19623
1756 19600
1758 19600
1759 19600
1761 19600
1762 19600
1763 58800
1778 23
1779 23
1780 23
1781 23
1782 23
1784 23
1785 23
1786 23
1787 23
1788 23
1789 23
1793 23
1795 23
1797 23
1798 23
1799 23
1800 23
1801 23
1802 23
1803 23
1804 23
1805 23
1806 23
1807 23
1808 23
1809 23
fn=gogo
411 299
412 299
413 299
414 299
415 299
416 299
417 299
418 299
419 299
420 299
421 299
422 299
fn=gosave_systemstack_switch
822 184680
823 184680
824 184680
825 184680
826 184680
827 184680
829 184680
830 184680
831 184680
833 184680
fn=runtime.asminit.abi0
391 6
fn=runtime.checkASM.abi0
1633 1
1634 1
1635 1
1636 1
1637 1
1638 1
fn=runtime.cputicks.abi0
1175 1
1176 1
1182 1
1183 1
1184 1
1185 1
1195 1
1196 1
1197 1
1198 1
fn=runtime.gcWriteBarrier1
1812 756
1813 756
fn=runtime.gcWriteBarrier2
1815 18719
1816 18719
fn=runtime.gcWriteBarrier3
1818 19
1819 19
fn=runtime.gcWriteBarrier4
1821 103
1822 103
fn=runtime.gcWriteBarrier6
1827 3
1828 3
fn=runtime.gogo.abi0
404 299
405 299
406 299
407 299
fn=runtime.mcall
428 250
429 125
434 125
435 125
436 125
437 125
438 125
441 125
442 125
445 125
446 125
447 125
448 125
451 125
452 125
454 125
455 125
456 125
457 125
458 125
fn=runtime.morestack.abi0
578 173
579 173
582 173
583 173
584 173
585 173
586 173
587 173
589 173
590 173
591 173
596 173
597 173
598 173
605 173
606 173
607 173
608 173
609 173
612 173
613 173
614 173
615 173
616 173
fn=runtime.morestack_noctxt.abi0
622 173
623 173
fn=runtime.mstart.abi0
394 6
fn=runtime.procyield.abi0
799 284
801 8520
802 8520
803 8520
804 284
fn=runtime.publicationBarrier
810 189521
fn=runtime.rt0_go.abi0
161 1
162 1
163 1
164 1
165 1
166 1
170 1
171 1
172 1
173 1
174 1
175 1
178 1
179 1
180 1
181 1
183 1
184 1
185 1
186 1
187 1
188 1
189 1
193 1
194 1
195 1
199 1
200 1
201 1
258 1
259 1
263 1
264 1
265 1
266 1
271 1
272 1
273 1
276 1
278 1
280 1
341 1
343 1
344 1
345 1
346 1
347 1
348 1
349 1
352 1
353 1
354 1
355 1
358 1
fn=runtime.setg.abi0
1144 381
1146 381
1147 381
fn=runtime.stackcheck.abi0
1164 5
1165 5
1166 5
1168 5
1169 5
1171 5
fn=runtime.strhash
1216 9
1217 9
1218 9
1219 9
1220 9
fn=runtime.systemstack.abi0
478 383012
479 191506
481 191506
482 191506
484 191506
485 191506
487 191506
488 191506
489 191506
491 184680
492 184680
499 184680
502 184680
503 184680
504 184680
507 184680
508 184680
509 184680
513 184680
514 184680
515 184680
516 184680
517 184680
518 184680
519 184680
520 184680
521 369360
527 6826
528 6826
531 6826
532 6826
fl=/usr/lib/go-1.22/src/runtime/atomic_pointer.go
fn=runtime.allgadd
33 12
39 12
fn=runtime.atomicwb
22 9
24 9
25 6
26 3
27 9
fn=runtime.mcommoninit
33 12
39 12
fn=runtime.modulesinit
33 2
39 2
fn=runtime.procresize
33 24
39 24
fn=runtime/internal/atomic.storePointer
33 2
39 1
47 3
48 1
49 3
fn=sync/atomic.StorePointer
75 63
76 48
77 6
82 48
83 63
fl=/usr/lib/go-1.22/src/runtime/cgo_mmap.go
fn=runtime.mmap
31 420
32 280
47 1960
fn=runtime.munmap
50 5
51 2
55 5
56 3
fl=/usr/lib/go-1.22/src/runtime/cgo_sigaction.go
fn=runtime.sigaction
21 456
34 228
35 114
78 114
88 342
fl=/usr/lib/go-1.22/src/runtime/chan.go
fn=runtime.chanparkcommit
657 5
663 1
667 1
673 1
674 4
fn=runtime.chanrecv
123 2
457 10
465 14
474 10
507 8
511 4
513 6
527 6
537 10
539 1
543 3
546 3
547 4
548 2
551 1
552 1
553 5
556 1
562 1
563 3
564 1
565 5
570 5
571 1
572 6
573 1
574 1
575 2
576 1
582 1
583 6
586 4
589 3
590 1
591 3
594 2
595 3
596 1
597 1
598 5
757 3
758 1
759 2
760 3
761 1
762 1
771 2
772 2
773 4
fn=runtime.chanrecv1
441 6
442 4
443 6
fn=runtime.chansend
123 2
160 10
161 12
193 2
198 8
202 4
204 6
209 4
212 10
213 4
216 6
218 1
222 3
223 4
224 2
227 1
228 1
229 4
241 2
771 2
772 6
773 4
776 2
777 2
778 3
794 5
fn=runtime.chansend.func1
212 11
fn=runtime.chansend1
144 6
145 6
146 6
fn=runtime.closechan
357 5
358 3
362 2
363 4
374 1
376 1
379 1
381 2
403 2
418 1
421 2
426 3
771 5
772 2
773 4
fn=runtime.makechan
72 10
73 4
76 10
79 4
83 4
84 14
94 4
96 5
98 4
99 3
102 4
103 5
110 6
111 6
112 4
118 6
808 1
fn=runtime.send
294 5
311 4
315 2
316 3
317 7
318 1
319 2
322 2
323 3
fl=/usr/lib/go-1.22/src/runtime/cpuflags_amd64.go
fn=runtime.init.1
15 2
17 2
18 3
19 2
20 2
21 2
23 5
24 1
fl=/usr/lib/go-1.22/src/runtime/debug.go
fn=runtime.GOMAXPROCS
16 105
21 21
22 42
23 21
24 42
25 84
fl=/usr/lib/go-1.22/src/runtime/defs_linux_amd64.go
fn=runtime.futexsleep
104 332
105 1992
fl=/usr/lib/go-1.22/src/runtime/duff_amd64.s
fn=runtime.duffcopy
397 834
398 834
399 834
400 834
402 834
403 834
404 834
405 834
407 834
408 834
409 834
410 834
412 834
413 834
414 834
415 834
417 834
418 834
419 834
420 834
422 834
423 834
424 834
425 834
427 834
fn=runtime.duffzero
8 222
9 222
10 222
11 222
12 222
14 222
15 222
16 222
17 222
18 222
20 222
21 222
22 222
23 222
24 222
26 222
27 306
28 306
29 306
30 306
32 306
33 306
34 306
35 306
36 306
38 306
39 306
40 306
41 306
42 306
44 306
45 306
46 306
47 306
48 306
50 306
51 306
52 306
53 306
54 306
56 306
57 306
58 306
59 306
60 306
62 306
63 306
64 306
65 306
66 306
68 306
69 306
70 306
71 306
72 306
74 306
75 306
76 306
77 307
78 307
80 307
81 307
82 307
83 307
84 307
86 307
87 307
88 307
89 307
90 307
92 307
93 307
94 1975
95 2808
96 2808
98 2808
99 2808
100 2808
101 2808
102 2808
104 2808
fl=/usr/lib/go-1.22/src/runtime/env_posix.go
fn=runtime.gogetenv
9 30
10 15
11 20
14 1971
15 3061
16 32
19 25
35 80
fl=/usr/lib/go-1.22/src/runtime/exithook.go
fn=runtime.runExitHooks
41 5
42 3
45 1
58 6
67 4
68 1
69 3
fl=/usr/lib/go-1.22/src/runtime/fastlog2.go
fn=runtime.fastexprand
18 1
21 4
22 3
23 2
25 3
26 10
fl=/usr/lib/go-1.22/src/runtime/fds_unix.go
fn=runtime.checkfds
9 5
10 4
25 4
26 18
27 12
28 6
29 3
45 3
fl=/usr/lib/go-1.22/src/runtime/float.go
fn=runtime.(*piController).next
14 125
19 150
24 100
fn=runtime.fastexprand
47 1
fn=runtime.init
9 2
fl=/usr/lib/go-1.22/src/runtime/histogram.go
fn=runtime.(*timeHistogram).record
105 864
107 576
119 1935
124 219
128 576
133 2016
134 1152
135 864
fl=/usr/lib/go-1.22/src/runtime/iface.go
fn=runtime.(*itabTableType).add
32 22
163 22
164 44
165 11
166 11
167 11
168 22
175 22
180 11
181 11
182 11
fn=runtime.convT64
378 740
379 443
380 3
382 588
383 294
385 739
fn=runtime.convTslice
398 8
400 2
401 2
406 3
fn=runtime.init
305 4
306 4
307 4
308 4
309 4
fn=runtime.itabAdd
123 55
128 44
132 11
133 88
155 33
156 33
fn=runtime.itabsinit
246 5
248 1
249 45
250 108
251 11
254 1
255 3
fl=/usr/lib/go-1.22/src/runtime/internal/atomic/types.go
fn=internal/poll.runtime_pollOpen
359 6
379 6
fn=runtime.(*activeSweep).end
236 753252
fn=runtime.(*atomicHeadTailIndex).incTail
344 193894
fn=runtime.(*consistentHeapStats).acquire
291 1107786
fn=runtime.(*consistentHeapStats).release
291 1107786
fn=runtime.(*cpuStats).accumulate
74 343
fn=runtime.(*gcCPULimiterState).finishGCTransition
74 98
81 294
fn=runtime.(*gcCPULimiterState).resetCapacity
131 3
179 1
236 1
fn=runtime.(*gcCPULimiterState).startGCTransition
236 98
fn=runtime.(*gcCPULimiterState).update
236 238
fn=runtime.(*gcCPULimiterState).updateLocked
74 674
81 674
109 5134
fn=runtime.(*gcControllerState).commit
21 100
309 249
316 151
fn=runtime.(*gcControllerState).endCycle
74 245
309 98
fn=runtime.(*gcControllerState).findRunnableGCWorker
74 229
90 12
359 3
fn=runtime.(*gcControllerState).heapGoalInternal
309 284841
fn=runtime.(*gcControllerState).init
21 1
28 1
74 1
81 1
fn=runtime.(*gcControllerState).markWorkerStop
109 6
fn=runtime.(*gcControllerState).memoryLimitHeapGoal
74 94947
309 284841
fn=runtime.(*gcControllerState).resetLive
74 147
316 196
359 49
fn=runtime.(*gcControllerState).revise
21 18090
74 54270
309 162810
316 36180
445 36180
fn=runtime.(*gcControllerState).setMaxIdleMarkWorkers
325 196
fn=runtime.(*gcControllerState).startCycle
81 833
309 49
fn=runtime.(*gcControllerState).trigger
309 76759
fn=runtime.(*gcControllerState).update
344 378846
359 94677
fn=runtime.(*gcWork).dispose
109 6
fn=runtime.(*limiterEvent).consume
325 9496
fn=runtime.(*limiterEvent).stop
109 6584
325 7295
fn=runtime.(*mcache).allocLarge
344 259413
fn=runtime.(*mcache).prepareForSweep
214 1176
fn=runtime.(*mcache).refill
344 16078
fn=runtime.(*mcache).releaseAll
344 328
fn=runtime.(*mcentral).cacheSpan
194 8155
236 26148
359 24517
fn=runtime.(*mheap).alloc.func1
194 94576
fn=runtime.(*mheap).allocSpan
74 94628
109 2
124 94628
168 94628
309 189258
316 1
344 23558
420 2
fn=runtime.(*mheap).freeSpanLocked
131 447900
420 89540
fn=runtime.(*mheap).initSpan
131 473036
420 189152
fn=runtime.(*mheap).reclaim
309 49644
316 28
344 3747
359 63978
401 41061
420 24
fn=runtime.(*mheap).reclaimChunk
194 1828
236 9140
359 1828
fn=runtime.(*mspan).ensureSwept
194 5
fn=runtime.(*mspan).init
131 283884
fn=runtime.(*pageAlloc).scavengeOne
344 150
fn=runtime.(*pageAlloc).sysGrow
344 10
fn=runtime.(*pollCache).free
359 2
379 1
fn=runtime.(*pollDesc).publishInfo
194 2
236 8
359 2
fn=runtime.(*rwmutex).rlock
56 10
fn=runtime.(*rwmutex).runlock
56 20
fn=runtime.(*scavengeIndex).alloc
309 190460
316 190460
fn=runtime.(*scavengeIndex).find
74 209
90 50
309 900
359 94
fn=runtime.(*scavengeIndex).free
74 90311
81 7276
309 180622
316 180622
fn=runtime.(*scavengeIndex).grow
379 1
fn=runtime.(*scavengeIndex).init
74 3
90 7
fn=runtime.(*scavengeIndex).nextGen
74 49
81 9
fn=runtime.(*scavengeIndex).setEmpty
309 26
316 26
fn=runtime.(*scavengeIndex).sysGrow
344 2
359 558
379 4
fn=runtime.(*scavengerState).init.func2
109 243
fn=runtime.(*scavengerState).init.func3
309 132
fn=runtime.(*scavengerState).wake
214 96
fn=runtime.(*spanSet).pop
214 684
291 566583
325 755444
359 188861
466 1133166
479 378406
526 188861
539 342
fn=runtime.(*spanSet).push
359 392624
379 3224
466 578514
479 782136
526 192282
539 1612
fn=runtime.(*spanSet).reset
194 2416
214 2416
316 27864
359 13328
379 26656
466 3624
479 2416
526 1208
539 1208
fn=runtime.(*sweepLocked).sweep
124 377948
344 638714
359 377948
fn=runtime.(*timeHistogram).record
344 864
fn=runtime.acquirep
359 288
fn=runtime.adjusttimers
74 50
fn=runtime.bgscavenge
420 50
fn=runtime.bgsweep
194 624915435
fn=runtime.casfrom_Gscanstatus
236 833
fn=runtime.casgstatus
236 1631
fn=runtime.chanparkcommit
131 3
179 1
fn=runtime.chanrecv
131 3
179 1
fn=runtime.checkIdleGCNoP
309 94
fn=runtime.checkTimers
74 1426
194 110
fn=runtime.checkTimersNoP
74 528
fn=runtime.checkdead
194 269
fn=runtime.checkmcount
194 12
fn=runtime.createfing
194 4
236 6
fn=runtime.deductSweepCredit
309 508304
359 225711
fn=runtime.deltimer
236 170
291 34
fn=runtime.doSigPreempt
194 100
fn=runtime.doaddtimer
81 25
194 25
291 50
fn=runtime.dodeltimer0
81 125
291 75
fn=runtime.entersyscallblock_handoff
359 12
fn=runtime.execute
359 450
fn=runtime.exitsyscall
359 83
fn=runtime.exitsyscallfast
359 166
fn=runtime.exitsyscallfast_pidle
124 18
131 9
168 36
179 3
fn=runtime.finalizercommit
280 3
fn=runtime.findObject
124 125347
fn=runtime.findRunnable
21 184
56 936
74 12
81 136
98 87
124 1044
168 1431
194 1388
214 261
359 387
fn=runtime.finishsweep_m
194 49
fn=runtime.forEachPInternal
359 1776
fn=runtime.forcegchelper
124 2
131 6
168 2
179 2
fn=runtime.gcAssistAlloc
74 241
109 18
124 482
168 241
309 482
359 708
437 482
438 482
fn=runtime.gcAssistAlloc1
109 472
309 472
316 236
437 236
fn=runtime.gcControllerCommit
74 49
194 49
359 49
fn=runtime.gcDrain
109 88
fn=runtime.gcDrainN
109 2238
124 8261
168 8261
fn=runtime.gcFlushBgCredit
109 164
fn=runtime.gcMarkTermination
81 441
194 98
236 392
309 49
359 49
fn=runtime.gcPaceScavenger
309 98
316 260
fn=runtime.gcPaceSweeper
194 49
309 98
316 98
359 49
fn=runtime.gcResetMarkState
309 49
fn=runtime.gcStart
291 147
309 49
359 98
fn=runtime.gcSweep
214 147
316 294
379 147
fn=runtime.gcTrigger.test
21 89
194 94942
309 76710
fn=runtime.gcinit
214 3
fn=runtime.gcstopm
56 164
124 242
168 121
fn=runtime.goschedIfBusy
21 7608
fn=runtime.goschedImpl
359 100
fn=runtime.injectglist
21 26
359 49
fn=runtime.isSystemGoroutine
194 1
fn=runtime.mProf_Flush
194 98
236 196
fn=runtime.mProf_FlushLocked
466 49
fn=runtime.main
194 2
fn=runtime.mallocinit
81 3
fn=runtime.markroot
109 980
fn=runtime.modtimer
236 299
291 4
fn=runtime.modulesinit
344 2
fn=runtime.netpoll
214 3
fn=runtime.netpollBreak
236 6
fn=runtime.netpollGenericInit
194 2
214 3
fn=runtime.newproc1
56 48
194 17
214 1
344 16
359 17
fn=runtime.park_m
359 124
fn=runtime.parsedebugvars
484 3
546 1
fn=runtime.pidleget
56 3666
fn=runtime.pidlegetSpinning
214 321
fn=runtime.pidleput
56 3699
309 1233
316 1233
fn=runtime.preemptone
236 775
fn=runtime.procresize
359 100
fn=runtime.ready
359 56
fn=runtime.reentersyscall
124 213
168 142
359 71
fn=runtime.releasep
359 281
fn=runtime.resetspinning
56 520
fn=runtime.retake
21 4
359 5
fn=runtime.runOneTimer
236 48
fn=runtime.runtimer
194 26
236 228
291 48
fn=runtime.scanstack
124 832
168 832
194 833
fn=runtime.schedinit
81 2
fn=runtime.semacquire1
291 36
fn=runtime.semrelease1
194 1224
291 18
fn=runtime.shrinkstack
124 833
168 833
194 833
fn=runtime.sigsend
291 635
fn=runtime.spanOfHeap
124 5
fn=runtime.startTheWorldWithSema
124 196
131 447
168 98
179 149
194 98
359 98
fn=runtime.stealWork
124 9165
168 9165
fn=runtime.stopTheWorldWithSema
124 196
131 392
168 98
179 98
359 196
fn=runtime.suspendG
194 833
fn=runtime.sweepone
124 180455
194 625095432
214 147
236 719792
420 355696
fn=runtime.sysAlloc
344 112
fn=runtime.sysFree
344 3
fn=runtime.sysmon
21 136
74 191
90 224
124 261
131 324
168 263
179 108
194 382
fn=runtime.timeSleepUntil
74 2232
fn=runtime.updateTimerPMask
194 4856
fn=runtime.wakeNetPoller
74 28
fn=runtime.wakep
21 425
37 1950
56 530
fl=/usr/lib/go-1.22/src/runtime/internal/sys/intrinsics.go
fn=runtime.(*pallocBits).findSmallN
153 54715
fn=runtime.(*pallocBits).summarize
153 4302890
fn=runtime.(*pallocData).findScavengeCandidate
153 2175
fl=/usr/lib/go-1.22/src/runtime/internal/syscall/asm_linux_amd64.s
fn=runtime/internal/syscall.Syscall6
30 252
31 252
32 252
33 252
35 252
36 252
37 252
38 1
39 1
40 1
41 1
42 1
45 251
46 251
47 251
fl=/usr/lib/go-1.22/src/runtime/internal/syscall/syscall_linux.go
fn=runtime.netpollinit
42 8
60 9
fn=runtime.netpollopen
60 9
fn=runtime/internal/syscall.EpollWait
48 1026
50 342
55 1881
56 684
fn=syscall.RawSyscall6
37 216
38 288
fl=/usr/lib/go-1.22/src/runtime/lfstack.go
fn=runtime.(*gcControllerState).findRunnableGCWorker
41 3
42 6
43 6
46 3
47 3
48 21
55 660
76 3
fn=runtime.(*lfstack).push
24 17670
25 10602
26 3534
27 10602
32 3534
33 3534
34 21204
38 10602
72 3534
76 7068
fn=runtime.(*spanSetBlockAlloc).alloc
41 3155
42 1612
43 3224
46 1543
47 1543
48 10870
76 1543
fn=runtime.checkIdleGCNoP
55 188
fn=runtime.findRunnable
55 196
fn=runtime.gcAssistAlloc1
55 472
fn=runtime.gcBgMarkWorker
55 6
fn=runtime.gcMarkDone
55 198
fn=runtime.getempty
41 1037
42 988
43 1976
46 988
47 988
48 5928
76 988
fn=runtime.lfnodeValidate
60 3920
61 6272
64 1568
69 2352
72 784
76 784
fn=runtime.trygetfull
42 9332
43 18664
46 197
47 197
48 10317
76 197
fl=/usr/lib/go-1.22/src/runtime/lock_futex.go
fn=internal/poll.runtime_pollOpen
52 1
121 1
fn=runtime.(*consistentHeapStats).acquire
52 24
fn=runtime.(*consistentHeapStats).release
121 24
fn=runtime.(*mheap).allocSpan
52 94573
121 94573
fn=runtime.(*mheap).freeManual
52 40
121 40
fn=runtime.(*mheap).reclaim
52 35
121 35
fn=runtime.(*mheap).reclaimChunk
52 610
121 610
fn=runtime.(*pageAlloc).scavengeOne
52 163
121 163
fn=runtime.(*pollCache).alloc
52 1
121 1
fn=runtime.(*pollCache).free
52 2
121 2
fn=runtime.(*scavengerState).park
52 24
fn=runtime.(*scavengerState).run
52 48
121 48
fn=runtime.(*scavengerState).sleep
52 50
121 25
fn=runtime.(*scavengerState).wake
52 119
121 119
fn=runtime.(*spanSet).push
52 1612
121 1612
fn=runtime.(*ticksType).init
52 1
121 1
fn=runtime.GOMAXPROCS
52 21
121 63
fn=runtime.acquireSudog
52 6
121 3
fn=runtime.addfinalizer
52 4
121 4
fn=runtime.addspecial
52 4
121 4
fn=runtime.allgadd
52 17
121 17
fn=runtime.allocmcache.func1
52 12
121 12
fn=runtime.bgsweep
52 624915436
121 624915386
fn=runtime.bootstrapRand
52 40
121 40
fn=runtime.bootstrapRandReseed
52 6
121 6
fn=runtime.chanparkcommit
121 1
fn=runtime.chanrecv
52 2
121 1
fn=runtime.chansend
52 2
121 1
fn=runtime.chansend.func1
121 1
fn=runtime.checkTimers
52 25
121 25
fn=runtime.clearpools
52 98
121 98
fn=runtime.closechan
52 1
121 1
fn=runtime.exitsyscallfast_pidle
52 18
121 18
fn=runtime.finalizercommit
121 1
fn=runtime.findRunnable
52 429
121 429
fn=runtime.forEachG
52 49
121 49
fn=runtime.forEachPInternal
52 296
121 296
146 145
fn=runtime.forcegchelper
52 2
fn=runtime.freeSomeWbufs
52 624915435
121 624915435
fn=runtime.freeStackSpans
52 245
121 245
fn=runtime.gcBgMarkStartWorkers
146 12
fn=runtime.gcMarkTermination
52 98
121 98
fn=runtime.gcMarkTermination.func4.1
52 490
121 490
fn=runtime.gcParkAssist
52 4
121 4
fn=runtime.gcResetMarkState
52 49
121 49
fn=runtime.gcSweep
52 98
121 98
fn=runtime.gcWakeAllAssists
52 49
121 49
fn=runtime.gcstopm
52 121
121 121
fn=runtime.getempty
52 49
121 49
fn=runtime.goschedImpl
52 100
121 100
fn=runtime.incidlelocked
52 12
121 12
fn=runtime.injectglist
52 25
121 25
fn=runtime.injectglist.func1
52 25
121 25
fn=runtime.itabsinit
52 1
121 1
fn=runtime.lock
51 447700
52 89540
53 268620
fn=runtime.lock2
55 6250129942
56 1250025986
58 5000104013
61 2500051972
64 2500052041
65 2500051972
66 3750077751
78 345
79 138
83 138
88 3758
89 1322
90 594
91 186
92 186
95 1136
99 710
100 213
101 335
106 213
110 142
111 149
112 21
113 21
116 256
fn=runtime.mProf_Flush
52 98
121 98
fn=runtime.markrootFreeGStacks
52 49
121 49
fn=runtime.markrootSpans
52 98
121 98
fn=runtime.mcommoninit
52 6
121 6
fn=runtime.modtimer
52 24
121 24
fn=runtime.netpollGenericInit
52 1
121 1
fn=runtime.newArenaMayUnlock
52 8
121 8
fn=runtime.newMarkBits
52 75
121 75
fn=runtime.nextMarkBitArenaEpoch
52 49
121 49
fn=runtime.notesleep
158 1315
159 526
160 1315
164 789
168 1825
169 526
170 1837
171 1036
174 777
176 777
fn=runtime.notetsleep
229 1590
230 318
231 954
235 1269
fn=runtime.notetsleep_internal
183 990
184 660
186 975
187 36
191 60
192 18
193 60
194 30
197 18
199 48
202 954
203 12
206 945
207 315
208 1030
211 996
212 1328
213 1655
216 993
217 1324
220 64
221 273
224 34
226 1931
fn=runtime.notetsleepg
240 60
241 12
242 60
246 12
247 60
248 12
249 48
fn=runtime.notewakeup
149 2710
150 1084
151 1084
155 1626
156 1626
fn=runtime.parkunlock_c
121 107
fn=runtime.persistentalloc1
52 9
121 9
fn=runtime.prepareFreeWorkbufs
52 49
121 49
fn=runtime.procresize
52 1
121 1
fn=runtime.randinit
52 1
121 1
fn=runtime.removefinalizer
52 1
121 1
fn=runtime.removespecial
52 1
121 1
fn=runtime.retake
52 196
121 196
fn=runtime.runOneTimer
52 8
121 8
fn=runtime.runSafePointFn
52 179
121 179
fn=runtime.runfinq
52 2
121 1
fn=runtime.schedEnableUser
52 49
121 49
fn=runtime.schedinit
52 1
121 1
fn=runtime.semrelease1
121 6
fn=runtime.stackalloc
52 7
121 7
fn=runtime.stackcache_clear
52 2352
121 2352
fn=runtime.stackcacherefill
52 10
121 10
fn=runtime.startTheWorldWithSema
52 98
121 98
fn=runtime.startm
52 238
121 238
fn=runtime.stopTheWorldWithSema
52 98
121 98
146 72
fn=runtime.stopm
52 262
121 262
fn=runtime.sysmon
52 313
121 313
146 53
fn=runtime.timeSleepUntil
52 62
121 62
fn=runtime.unlock
120 447700
121 89540
122 268620
fn=runtime.unlock2
124 6250129936
125 2500051972
126 2500052080
129 2500051972
130 216
133 1250025986
134 7500156024
135 3750077958
136 5000103944
139 3749693198
140 26
142 3750077958
fn=runtime.updateTimerPMask
52 1195
121 1195
fn=runtime.wakep
52 325
121 325
fl=/usr/lib/go-1.22/src/runtime/lockrank_off.go
fn=internal/poll.runtime_pollOpen
24 2
34 2
fn=runtime.(*consistentHeapStats).acquire
24 48
fn=runtime.(*consistentHeapStats).release
34 24
fn=runtime.(*mheap).allocSpan
24 94573
34 189146
fn=runtime.(*mheap).freeManual
24 40
34 80
fn=runtime.(*mheap).reclaim
24 35
34 35
fn=runtime.(*mheap).reclaimChunk
24 1220
34 1220
fn=runtime.(*pageAlloc).scavengeOne
24 251
34 163
fn=runtime.(*pollCache).alloc
24 1
34 1
fn=runtime.(*pollCache).free
24 3
34 4
fn=runtime.(*scavengerState).park
24 24
fn=runtime.(*scavengerState).run
24 48
34 144
fn=runtime.(*scavengerState).sleep
24 100
34 75
fn=runtime.(*scavengerState).wake
24 119
34 286
fn=runtime.(*spanSet).push
24 1612
34 1612
fn=runtime.(*ticksType).init
24 3
34 2
fn=runtime.GOMAXPROCS
24 63
34 42
fn=runtime.acquireSudog
24 6
34 6
fn=runtime.addfinalizer
24 8
34 8
fn=runtime.addspecial
24 12
34 12
fn=runtime.allgadd
24 34
34 34
fn=runtime.allocmcache.func1
24 24
34 24
fn=runtime.bgsweep
24 1249830872
34 1249830772
fn=runtime.bootstrapRand
24 120
34 80
fn=runtime.bootstrapRandReseed
24 12
34 12
fn=runtime.chanparkcommit
34 2
fn=runtime.chanrecv
24 4
34 2
fn=runtime.chansend
24 6
34 2
fn=runtime.chansend.func1
34 1
fn=runtime.checkTimers
24 75
34 50
fn=runtime.clearpools
24 196
34 196
fn=runtime.closechan
24 2
34 2
fn=runtime.exitsyscallfast_pidle
24 54
34 36
fn=runtime.finalizercommit
34 2
fn=runtime.findRunnable
24 875
34 858
fn=runtime.forEachG
24 147
34 98
fn=runtime.forEachPInternal
24 740
34 592
fn=runtime.forcegchelper
24 4
fn=runtime.freeSomeWbufs
24 1874746305
34 1249830870
fn=runtime.freeStackSpans
24 539
34 490
fn=runtime.gcMarkTermination
24 196
34 245
fn=runtime.gcMarkTermination.func4.1
24 980
34 980
fn=runtime.gcParkAssist
24 12
34 12
fn=runtime.gcResetMarkState
24 98
34 98
fn=runtime.gcSweep
24 196
34 294
fn=runtime.gcWakeAllAssists
24 98
34 98
fn=runtime.gcstopm
24 242
34 363
fn=runtime.getempty
24 98
34 98
fn=runtime.goschedImpl
24 200
34 300
fn=runtime.incidlelocked
24 36
34 24
fn=runtime.injectglist
24 52
34 50
fn=runtime.injectglist.func1
24 50
34 50
fn=runtime.itabsinit
24 3
34 2
fn=runtime.lock
24 89540
fn=runtime.mProf_Flush
24 196
34 196
fn=runtime.markrootFreeGStacks
24 147
34 98
fn=runtime.markrootSpans
24 98
34 196
fn=runtime.mcommoninit
24 12
34 12
fn=runtime.modtimer
24 72
34 72
fn=runtime.netpollGenericInit
24 2
34 2
fn=runtime.newArenaMayUnlock
24 16
34 16
fn=runtime.newMarkBits
24 225
34 150
fn=runtime.nextMarkBitArenaEpoch
24 147
34 98
fn=runtime.parkunlock_c
34 214
fn=runtime.persistentalloc1
24 27
34 18
fn=runtime.prepareFreeWorkbufs
24 147
34 98
fn=runtime.procresize
24 2
34 2
fn=runtime.randinit
24 3
34 2
fn=runtime.removefinalizer
24 2
34 2
fn=runtime.removespecial
24 2
34 2
fn=runtime.retake
24 397
34 392
fn=runtime.runOneTimer
24 16
34 8
fn=runtime.runSafePointFn
24 358
34 537
fn=runtime.runfinq
24 4
34 4
fn=runtime.schedEnableUser
24 98
34 147
fn=runtime.schedinit
24 2
34 2
fn=runtime.semacquire1
24 12
fn=runtime.semrelease1
24 6
34 12
fn=runtime.stackalloc
24 13
34 15
fn=runtime.stackcache_clear
24 4704
34 7056
fn=runtime.stackcacherefill
24 30
34 20
fn=runtime.startTheWorldWithSema
24 196
34 196
fn=runtime.startm
24 476
34 476
fn=runtime.stopTheWorldWithSema
24 294
34 196
fn=runtime.stopm
24 524
34 524
fn=runtime.sysmon
24 627
34 696
fn=runtime.timeSleepUntil
24 186
34 124
fn=runtime.unlock
34 89540
fn=runtime.updateTimerPMask
24 3585
34 2390
fn=runtime.wakep
24 650
34 650
fl=/usr/lib/go-1.22/src/runtime/malloc.go
fn=runtime.(*linearAlloc).alloc
1645 60
1646 12
1647 36
1648 48
fn=runtime.(*mcache).nextFree
938 41038
939 90266
941 24618
942 73854
944 24618
948 32824
950 32824
952 16412
955 24618
959 32824
960 24618
961 24618
965 41030
fn=runtime.(*mheap).sysAlloc
640 36
641 6
643 6
645 67
651 30
652 18
659 30
661 6
662 12
663 24
665 36
668 12
672 18
674 30
676 6
679 24
681 6
692 12
696 12
725 12
726 18
728 12
730 6
733 54
741 18
747 116
748 12
749 12
758 3
759 2
762 3
765 1
767 4
770 43
774 31
775 12
776 24
777 12
783 6
784 30
785 1
786 2
787 1
789 6
790 2
793 3
794 4
795 8
801 38
802 36
809 20
817 24
fn=runtime.allocmcache
1437 48
1451 24
fn=runtime.deductAssistCredit
1337 475005
1339 190002
1342 72476
1347 54600
1349 36238
1353 77611
1356 380247
fn=runtime.fastexprand
1460 24
1462 24
1463 22
1475 1
1476 4
1477 3
1481 9
fn=runtime.mallocgc
912 33688
913 16844
914 16510
915 24765
916 432
917 1080
920 1400
921 216
922 648
923 864
971 475005
972 767824
976 190002
993 285003
1025 190002
1028 95001
1029 190002
1032 285003
1035 95001
1039 95001
1040 190002
1046 1550929
1059 285003
1060 33697
1090 238
1092 476
1093 206
1102 64
1103 23
1104 18
1105 5
1107 1116
1109 108
1110 108
1111 108
1112 108
1113 108
1114 324
1117 130
1118 104
1119 468
1120 78
1122 26
1123 130
1127 376
1129 248
1130 248
1134 61672
1135 8292
1136 82
1139 24835
1140 1010
1142 40450
1144 41460
1145 8292
1146 33168
1147 8292
1148 16808
1149 32720
1151 12061
1152 29032
1153 15524
1155 8292
1157 41
1158 12143
1165 259432
1166 86471
1167 86471
1168 86490
1169 19
1170 265397
1171 80487
1174 57
1177 259371
1178 40
1181 94893
1183 412660
1207 94893
1217 284679
1223 189786
1224 90275
1255 189675
1257 207841
1259 284749
1264 98952
1265 210
1270 304839
1271 94893
1275 466062
1276 80468
1279 517531
1283 241404
1286 189786
1297 391388
1303 134780
1306 403806
1307 662739
1308 236
1328 602599
fn=runtime.mallocinit
374 5
375 3
386 5
390 2
394 2
398 4
402 5
406 2
413 3
416 178
417 42
433 80
434 108
440 2
454 2
455 3
459 1
460 15
463 1
508 642
531 640
536 64
537 320
538 128
540 256
541 256
542 640
621 1
622 3
fn=runtime.mapassign_faststr
1390 8
fn=runtime.memclrNoHeapPointersChunked
1367 402420
1368 80468
1371 80468
1372 724212
1373 160936
1378 80468
1379 80468
1382 482808
1384 241404
fn=runtime.newobject
1389 470
1390 846
fn=runtime.persistentalloc
1526 1170
1527 234
1528 3510
1531 936
fn=runtime.persistentalloc.func1
1528 2340
1529 702
1530 702
fn=runtime.persistentalloc1
1538 1170
1543 1158
1546 468
1547 405
1550 369
1557 468
1558 36
1561 228
1563 1140
1564 657
1566 9
1567 9
1569 912
1570 1135
1571 66
1572 22
1581 22
1582 22
1583 99
1587 22
1589 467
1590 467
1591 228
1592 684
1593 9
1596 941
1597 684
1598 1125
1600 1146
1674 456
fl=/usr/lib/go-1.22/src/runtime/map.go
fn=runtime.makemap_small
294 15
295 9
296 12
297 12
fn=runtime.mapassign_faststr
113 27
187 18
192 9
197 18
198 18
1098 18
1109 27
1113 36
1118 18
fl=/usr/lib/go-1.22/src/runtime/map_faststr.go
fn=runtime.mapassign_faststr
203 63
204 36
211 27
215 63
218 36
220 18
221 14
225 38
226 9
229 18
230 27
238 108
239 108
240 81
244 63
264 18
275 63
280 27
282 9
285 45
287 18
289 54
290 9
293 36
294 27
297 27
298 27
fl=/usr/lib/go-1.22/src/runtime/mbarrier.go
fn=runtime.typedmemclr
325 3
326 2
332 4
333 3
fn=runtime.typedmemmove
152 3
153 2
156 2
169 5
173 3
fn=runtime.typedslicecopy
252 9
254 6
257 8
258 4
284 4
292 6
293 4
302 8
303 8
fl=/usr/lib/go-1.22/src/runtime/mbitmap.go
fn=runtime.(*mcentral).grow
178 24315
fn=runtime.(*mspan).heapBitsSmallForAddr
22 8514
fn=runtime.(*mspan).nextFreeIndex
103 123565
104 24713
105 41220
106 82440
107 32824
109 16507
113 16507
115 49521
116 49521
131 16507
132 33014
133 8300
134 33200
137 57449
138 16414
140 32828
149 8207
150 32828
fn=runtime.(*mspan).refillAllocCache
86 394360
88 197180
96 394360
97 197180
fn=runtime.(*mspan).typePointersOfUnchecked
466 1046
fn=runtime.(*mspan).writeHeapBitsSmall
466 130
fn=runtime.(*stkframe).getStackMap
22 4104
fn=runtime.(*sweepLocked).sweep
201 196
211 392
447 188974
452 1145343
457 771228
458 1534790
fn=runtime.adjustpointers
22 22
fn=runtime.findObject
178 372654
191 124218
304 501993
305 501993
308 334662
309 251299
315 251904
321 871784
323 2258
324 6774
334 124218
335 372654
336 496872
fn=runtime.gcmarknewobject
22 18055
178 72220
191 18055
201 36110
219 18055
fn=runtime.greyobject
22 105530
201 105530
211 211060
219 87127
fn=runtime.progToPointerMask
484 10
485 8
486 24
487 8
488 6
489 10
492 6
fn=runtime.runGCProg
33 6
44 10663
57 10
510 4
522 3080
523 124
524 124
525 124
529 298
530 150
531 300
532 300
534 278
538 274
539 6144
540 7644
541 1911
542 1911
543 1911
544 1911
546 411
547 548
548 137
549 274
551 137
555 28
556 2
557 4
558 4
559 32
560 8
561 2
568 5
569 16
570 16
571 128
572 54
576 46
585 431
587 22
593 9
594 29
595 1
596 2
597 1
598 1
605 9
606 54
607 9
611 18
618 24
622 7
645 1490
646 2344
647 293
648 5792
649 2310
650 2310
651 2310
652 2310
657 18
658 16
659 305
660 4
662 9
668 2
670 4
671 6
679 8206
680 14336
681 2048
682 4096
683 2048
684 2048
687 2056
688 24
689 4
694 2211
695 8
696 12
697 20
698 2
699 2
701 4
fn=runtime.typePointers.next
22 231014
466 231014
fn=runtime.wbBufFlush1
22 18683
201 18683
211 37366
219 98
fl=/usr/lib/go-1.22/src/runtime/mbitmap_allocheaders.go
fn=runtime.(*mheap).initSpan
116 39
fn=runtime.(*mspan).heapBits
708 357
722 357
724 357
735 238
736 476
737 357
fn=runtime.(*mspan).heapBitsSmallForAddr
747 5676
748 5676
749 5676
759 8514
760 9611
761 5676
762 2838
763 2838
766 8514
768 2194
769 2194
770 2194
771 17552
774 17410
776 5676
fn=runtime.(*mspan).initHeapBits
544 472880
545 378446
546 19
547 76
551 283728
fn=runtime.(*mspan).typePointersOfUnchecked
177 11652
184 3884
185 6722
188 7768
190 22704
195 2092
197 2000
198 2000
200 46
202 1046
203 5230
fn=runtime.(*mspan).writeHeapBitsSmall
786 300
788 230
791 464
792 100
795 411
796 245
798 326
799 99
800 11
806 200
807 500
808 100
809 200
810 300
812 72
813 72
814 612
815 612
818 1189
831 500
fn=runtime.heapSetType
854 810
858 324
863 500
865 248
896 210
897 124
928 748
fn=runtime.scanobject
251 963150
257 140694
262 140694
264 140694
fn=runtime.typePointers.next
257 223370
262 223370
264 223370
275 227254
276 227254
277 2054209
278 223370
282 469796
283 17028
287 1160300
288 440796
289 220398
295 713641
296 6276
300 693042
301 918257
302 23196
303 98583
fl=/usr/lib/go-1.22/src/runtime/mcache.go
fn=runtime.(*mcache).allocLarge
219 432465
220 518826
223 172942
224 172942
225 86471
231 778239
233 86471
234 432355
235 86471
240 259413
241 172942
242 172942
243 172942
246 86471
249 605297
253 951181
254 259413
255 259413
256 345884
fn=runtime.(*mcache).prepareForSweep
312 4870
320 974
321 1948
322 2536
323 1158
324 1764
328 588
329 1176
330 588
331 1764
fn=runtime.(*mcache).refill
147 41030
149 89932
151 32824
154 32824
156 32156
159 48234
162 16078
163 40195
164 56273
167 16078
171 16078
174 32156
175 8039
178 8039
182 57275
183 16412
187 24618
193 24618
196 16412
211 24618
212 57442
213 16412
215 24618
216 24618
fn=runtime.(*mcache).releaseAll
259 2940
261 1176
262 588
264 2352
266 242748
267 80296
268 239904
269 1312
270 164
273 328
274 1148
275 328
279 656
281 820
287 81048
291 984
292 820
296 588
300 1176
301 1764
302 588
303 1176
306 2516
307 1764
fn=runtime.allocmcache
85 60
86 12
87 132
93 4932
94 6528
96 24
97 48
fn=runtime.allocmcache.func1
87 84
88 12
89 48
90 24
91 12
92 36
fn=runtime.mallocgc
128 95001
130 190002
135 172
137 189830
fn=runtime.stackalloc
74 46
fn=runtime.stackcache_clear
74 2371
fn=runtime.stackcacherefill
74 41
fn=runtime.stackfree
74 1
fn=runtime.stackpoolalloc
74 88
fn=runtime.stackpoolfree
74 21
fl=/usr/lib/go-1.22/src/runtime/mcentral.go
fn=runtime.(*mcache).allocLarge
77 605297
fn=runtime.(*mcentral).cacheSpan
59 52336
65 85259
71 130640
77 33200
81 41030
83 73854
84 16412
87 8206
88 8206
109 16412
112 8206
113 32824
117 22847
118 27766
120 19646
121 6596
122 13084
123 6488
125 324
127 147
128 245
129 49
140 83972
141 23009
142 29416
145 58107
147 24903
149 16602
150 24903
151 1
152 5
153 1
156 16600
160 25948
162 16210
163 8105
170 16210
171 24315
177 16412
178 8206
179 8206
184 24668
185 49236
188 8206
189 8206
191 8206
195 57442
197 24618
fn=runtime.(*mcentral).grow
250 40525
251 64840
252 24315
254 24315
255 16210
261 16210
262 32420
263 16210
264 32420
fn=runtime.(*mcentral).uncacheSpan
65 16078
77 56273
204 41015
205 16406
209 8203
210 24773
213 8203
220 492
223 16078
227 8203
235 164
236 492
238 40195
244 16078
247 24609
fn=runtime.(*mheap).init
49 136
fn=runtime.(*mheap).nextSpanForSweep
59 80760
71 1857070
fn=runtime.(*sweepLocked).sweep
65 10829
77 643115
fn=runtime.finishsweep_m
59 79968
71 39984
fl=/usr/lib/go-1.22/src/runtime/mem.go
fn=runtime.(*mheap).allocSpan
76 11779
77 11779
fn=runtime.(*mheap).sysAlloc
91 2
fn=runtime.(*pageAlloc).grow
91 3
fn=runtime.(*pageAlloc).scavengeOne
61 150
62 225
fn=runtime.(*pageAlloc).sysGrow
76 5
77 15
fn=runtime.(*scavengeIndex).sysGrow
76 1
77 4
fn=runtime.sysAlloc
49 84
50 112
51 28
52 140
fn=runtime.sysFree
113 3
114 6
115 1
116 1
117 5
fn=runtime.sysMap
153 495
154 297
155 297
156 495
fn=runtime.sysReserve
145 60
146 24
fl=/usr/lib/go-1.22/src/runtime/mem_linux.go
fn=runtime.sysAllocOS
21 87
22 232
23 58
34 87
fn=runtime.sysFree
149 3
fn=runtime.sysMapOS
164 495
165 693
166 396
169 495
178 198
181 297
fn=runtime.sysNoHugePageOS
110 10
111 12
116 12
117 6
fn=runtime.sysReserve
157 72
158 48
fn=runtime.sysUnusedOS
41 375
42 750
49 75
50 450
60 150
63 600
64 75
68 225
76 150
77 150
82 225
fn=runtime.sysUsedOS
84 58925
85 23570
95 35355
fl=/usr/lib/go-1.22/src/runtime/memclr_amd64.s
fn=runtime.memclrNoHeapPointers
18 84440
19 84440
24 168739
25 168739
26 84439
27 84439
28 84423
29 84423
30 84404
31 84404
32 84404
33 84380
34 84380
35 84379
36 84379
37 84359
38 84359
39 84359
40 84359
41 84340
42 84340
44 84326
45 84326
51 84326
52 84326
56 27
57 27
85 27
89 27
90 27
93 312
94 312
95 312
96 312
97 312
98 312
99 312
100 312
101 27
102 27
103 27
104 27
105 27
106 27
110 84299
111 84299
114 84299
118 84299
119 84299
124 84299
125 84299
126 84299
127 427964747
128 84299
160 16
161 16
162 16
164 84300
166 19
167 19
168 19
175 24
176 24
178 1
179 1
180 1
182 20
183 20
184 20
192 19
193 19
194 19
195 19
196 19
197 19
198 19
199 19
200 19
202 14
203 14
204 14
205 14
206 14
207 14
208 14
209 14
210 14
211 14
212 14
213 14
214 14
215 14
216 14
217 14
218 14
fl=/usr/lib/go-1.22/src/runtime/memmove_amd64.s
fn=runtime.memmove
39 893
40 893
41 893
54 895
55 895
56 826
57 826
58 826
59 826
60 784
61 637
62 637
63 636
64 402
65 402
66 364
67 364
68 133
69 133
70 37
71 37
72 8
73 8
75 5
76 5
81 2
82 2
88 2
89 2
118 2
119 2
120 2
121 2
155 69
157 147
158 147
159 147
161 42
162 42
163 42
164 42
165 42
167 1
168 1
169 1
170 1
171 1
174 234
175 234
176 234
178 38
179 38
180 38
181 38
182 38
184 231
185 231
186 231
187 231
188 231
190 96
191 96
192 96
193 96
194 96
195 96
196 96
197 96
198 96
200 29
201 29
202 29
203 29
204 29
205 29
206 29
207 29
208 29
209 29
210 29
211 29
212 29
213 29
214 29
215 29
216 29
218 3
219 3
220 3
221 3
222 3
223 3
224 3
225 3
226 3
227 3
228 3
229 3
230 3
231 3
232 3
233 3
234 3
235 3
236 3
237 3
238 3
239 3
240 3
241 3
242 3
243 3
244 3
245 3
246 3
247 3
248 3
249 3
251 3
252 3
254 8
255 8
256 8
257 8
258 8
259 8
260 8
261 8
262 8
263 8
264 8
265 8
266 8
267 8
268 8
269 8
270 8
271 8
272 8
273 8
274 8
275 8
276 8
277 8
278 8
279 8
280 8
281 8
282 8
283 8
284 8
285 8
286 8
287 8
288 8
289 8
290 8
292 2
293 2
299 3
300 3
302 3
304 3
307 3
308 3
336 3
337 3
339 3
340 3
341 3
343 3
344 3
346 3
347 3
349 3
350 3
352 3
353 3
355 3
357 3
358 3
361 3
363 3
364 3
367 526
368 526
369 526
370 526
371 526
372 526
373 526
374 526
375 526
376 526
377 526
378 526
380 3
381 3
382 3
383 3
384 3
385 3
386 3
387 3
388 3
389 3
390 3
391 3
392 3
fl=/usr/lib/go-1.22/src/runtime/mfinal.go
fn=runtime.SetFinalizer
410 50
411 10
417 10
418 10
421 25
425 10
429 10
435 25
437 10
445 30
449 15
458 9
459 10
461 11
464 3
467 16
471 4
474 8
477 12
479 13
502 36
503 8
505 4
508 4
510 80
515 12
fn=runtime.SetFinalizer.func1
461 6
462 2
463 3
fn=runtime.SetFinalizer.func2
510 40
511 20
514 12
fn=runtime.createfing
161 20
163 9
164 2
166 12
fn=runtime.finalizercommit
168 5
169 1
172 1
173 4
fn=runtime.runfinq
177 6
184 1
185 1
186 5
187 1
191 1
192 1
193 2
194 6
216 1
228 1
fl=/usr/lib/go-1.22/src/runtime/mfixalloc.go
fn=runtime.(*fixalloc).alloc
74 409790
75 255617
80 245874
82 144430
83 144430
84 144430
87 288860
89 29229
90 686
91 196
94 19440
95 29229
96 38396
98 29085
99 19486
100 19486
101 48571
fn=runtime.(*fixalloc).init
56 35
57 21
60 28
62 7
63 21
64 7
65 7
67 7
68 42
69 7
70 21
71 7
72 21
fn=runtime.(*mheap).freeSpanLocked
105 306032
107 229524
108 76508
fn=runtime.(*mheap).sysAlloc
105 18
fn=runtime.removefinalizer
105 3
107 3
108 1
fl=/usr/lib/go-1.22/src/runtime/mgc.go
fn=runtime.(*gcControllerState).findRunnableGCWorker
1455 630
1458 220
1461 659
fn=runtime.checkIdleGCNoP
1458 94
1461 282
fn=runtime.clearpools
1669 245
1671 147
1672 98
1676 392
1684 49
1686 196
1690 147
1691 49
1695 49
1699 196
1703 147
1704 49
1705 147
fn=runtime.findRunnable
1455 2
1458 98
1461 392
fn=runtime.gcAssistAlloc1
1458 236
1461 896
fn=runtime.gcBgMarkStartWorkers
1227 245
1233 232
1234 24
1236 36
1237 12
1241 12
1243 147
fn=runtime.gcBgMarkWorker
1276 72
1277 24
1282 60
1283 48
1284 72
1286 12
1288 24
1289 24
1310 105
1345 6
1346 9
1348 6
1353 9
1357 3
1358 6
1360 6
1361 3
1364 12
1365 9
1370 36
1412 3
1413 12
1414 15
1415 12
1418 9
1424 12
1425 9
1435 6
1439 24
1443 6
1444 3
1446 9
1458 3
1461 12
fn=runtime.gcBgMarkWorker.func1
1310 75
1313 45
1329 12
1333 30
1336 60
fn=runtime.gcBgMarkWorker.func2
1370 27
1382 3
1383 9
1386 6
1387 6
1388 9
1402 3
1408 12
1409 9
fn=runtime.gcMark
1470 245
1471 98
1475 98
1478 49
1481 392
1486 98
1495 343
1503 6321
1509 1176
1514 1764
1517 1764
1538 588
1547 2646
1548 588
1549 1176
1552 1176
1556 196
1557 147
fn=runtime.gcMarkDone
804 312
807 52
816 1048
817 3
818 9
823 99
826 99
827 99
845 198
851 50
852 50
859 98
860 49
861 441
862 98
863 490
879 49
880 490
889 98
899 49
903 147
906 196
910 49
915 49
919 98
924 245
927 196
928 147
1458 99
1461 396
fn=runtime.gcMarkDone.func1
827 5940
830 1188
837 5940
839 4752
840 150
841 50
843 3564
fn=runtime.gcMarkDone.func2
863 343
864 294
865 147
fn=runtime.gcMarkDone.func3
880 343
881 5684
882 1176
883 1176
884 588
888 147
fn=runtime.gcMarkTermination
237 147
238 441
932 294
934 49
936 49
937 49
939 49
940 392
941 49
942 98
946 49
953 490
964 49
965 490
986 98
987 196
989 49
990 49
996 245
998 147
1003 49
1007 294
1010 49
1011 49
1012 147
1013 245
1014 49
1015 147
1016 147
1017 196
1018 147
1019 98
1021 245
1022 49
1023 49
1028 147
1032 441
1038 49
1039 49
1042 49
1044 98
1049 49
1050 49
1051 147
1052 49
1058 98
1061 147
1066 49
1080 147
1081 294
1083 98
1087 784
1103 49
1107 49
1110 245
1124 49
1135 49
1142 196
1148 98
1194 49
1195 196
1196 196
1197 49
1198 245
1203 98
1209 49
1210 49
1213 49
1221 147
fn=runtime.gcMarkTermination.func1
953 294
954 49
962 147
fn=runtime.gcMarkTermination.func2
237 147
238 294
965 343
966 98
967 98
982 49
983 196
984 147
fn=runtime.gcMarkTermination.func3
1087 392
1097 49
1098 147
fn=runtime.gcMarkTermination.func4
1124 2940
1125 2352
1126 2352
1127 4410
1133 2254
1134 1764
fn=runtime.gcMarkTermination.func4.1
1127 3430
1128 490
1129 2450
1130 490
1131 1470
fn=runtime.gcResetMarkState
1630 245
1633 98
1640 49
1641 196
1642 49
1643 1453
1644 1110
1645 1554
1650 49
1651 49
1652 147
fn=runtime.gcResetMarkState.func1
1634 833
1635 833
1636 833
fn=runtime.gcStart
237 147
238 294
595 360
600 60
601 758
602 10
603 30
605 50
618 400
623 50
625 350
626 1
627 3
635 147
637 49
643 49
647 147
649 49
650 49
656 2646
657 2940
663 49
665 245
667 147
668 147
673 49
674 49
675 294
677 49
678 49
679 98
680 490
684 294
690 49
692 49
696 343
699 196
704 245
722 49
724 49
725 49
732 49
739 147
743 49
746 637
763 49
764 49
768 49
772 49
773 147
1257 49
1258 98
fn=runtime.gcStart.func1
680 343
681 294
682 147
fn=runtime.gcStart.func2
684 196
685 49
686 98
fn=runtime.gcStart.func3
746 441
747 294
748 196
749 98
751 196
752 49
753 49
756 147
757 147
fn=runtime.gcSweep
1567 245
1570 147
1574 49
1575 49
1576 49
1577 49
1578 392
1579 49
1580 49
1581 49
1583 49
1585 147
1611 49
1612 98
1613 49
1614 196
1616 49
1617 196
fn=runtime.gcTrigger.test
568 474850
569 854608
570 72676
573 153598
574 153420
575 383550
576 178
577 178
580 178
581 860
fn=runtime.gcenable
200 5
202 5
203 10
204 11
205 3
206 3
207 1
208 3
fn=runtime.gcenable.gowrap1
203 11
fn=runtime.gcenable.gowrap2
204 11
fn=runtime.gcinit
177 5
182 1
187 9
189 2
194 3
fn=sync.runtime_registerPoolCleanup
1660 4
1661 3
1662 2
fl=/usr/lib/go-1.22/src/runtime/mgclimit.go
fn=runtime.(*gcCPULimiterState).accumulate
266 1305
267 434
274 870
277 2460
288 631
290 74
293 1580
295 869
298 435
fn=runtime.(*gcCPULimiterState).finishGCTransition
121 490
122 392
129 196
130 588
132 98
133 98
134 98
135 294
fn=runtime.(*gcCPULimiterState).resetCapacity
302 4
320 5
321 4
327 2
328 3
330 3
331 3
335 1
336 1
338 1
339 3
fn=runtime.(*gcCPULimiterState).startGCTransition
99 600
100 392
105 196
109 294
110 294
111 98
116 294
302 392
fn=runtime.(*gcCPULimiterState).unlock
306 1685
307 674
308 674
311 1011
fn=runtime.(*gcCPULimiterState).update
163 1190
164 714
170 476
173 476
174 714
175 714
302 1190
fn=runtime.(*gcCPULimiterState).updateLocked
178 1685
179 337
180 1348
184 1685
185 337
188 337
189 674
190 711
194 337
195 674
196 447
199 674
207 337
208 34711
209 16176
210 4044
211 5714
213 4748
214 4748
215 2374
216 4748
218 4748
219 8188
220 3340
221 1670
226 337
231 4718
232 5766
256 6239
258 1348
259 1011
fn=runtime.(*gcControllerState).findRunnableGCWorker
144 660
fn=runtime.(*limiterEvent).consume
371 11870
381 11925
382 4770
385 4770
390 8088
423 10462
424 4044
425 4044
426 8088
428 4977
430 4770
431 2385
435 33
437 2374
438 2374
442 7122
fn=runtime.(*limiterEvent).stop
150 237
156 1222
381 7295
382 2918
385 2918
390 2918
448 7295
450 2918
451 1459
452 2918
456 1459
460 2918
461 1459
471 1695
472 472
474 2444
475 1222
476 1222
477 1695
479 2446
480 237
484 4377
fn=runtime.(*mheap).allocSpan
90 94628
371 4
390 2
409 4
412 2
fn=runtime.gcAssistAlloc
90 241
fn=runtime.gcAssistAlloc1
371 708
390 472
409 944
412 472
fn=runtime.gcDrainN
90 8261
fn=runtime.pidleput
371 4932
390 1233
409 2466
412 2466
fl=/usr/lib/go-1.22/src/runtime/mgcmark.go
fn=runtime.gcAssistAlloc
407 1215
410 1452
413 1209
414 9
437 481
466 241
467 241
468 484
469 964
470 482
472 723
481 241
483 241
484 12
486 16
489 245
491 16
493 6
495 12
498 245
518 12
521 237
522 236
523 236
542 472
555 3562
561 948
562 1420
563 237
564 49
567 523
575 10
576 1
577 2
589 20
597 236
598 236
613 476
616 708
fn=runtime.gcAssistAlloc.func1
555 1659
556 237
559 711
fn=runtime.gcAssistAlloc1
628 1185
631 1656
633 1420
641 1
642 3
650 236
651 944
653 944
654 708
660 236
664 944
665 708
667 944
675 236
676 2124
680 944
681 944
687 993
692 343
694 236
695 708
696 708
697 472
698 236
699 1416
701 944
702 236
703 708
704 472
706 708
fn=runtime.gcBgMarkWorker.func2
1124 21
fn=runtime.gcDrain
1163 30
1164 24
1170 18
1171 12
1172 291
1173 146
1176 8
1182 12
1192 32
1195 1690
1196 510
1197 510
1200 336
1201 1344
1217 1124
1223 262
1224 33
1227 131
1228 276
1229 14
1230 28
1234 7
1235 14
1238 276
1240 6
1242 403
1247 709
1248 41
1249 41
1250 164
1253 762
1254 41
1256 123
1258 303
1267 30
1268 3
1269 3
1270 573
1272 6
1274 18
fn=runtime.gcDrainN
1289 1180
1290 944
1296 472
1300 708
1301 148429
1303 16148
1304 5631
1307 8074
1308 16148
1309 4749
1310 9498
1313 4559
1314 13677
1318 20897
1320 13533
1321 13386
1322 13386
1323 42188
1324 4462
1331 10689
1334 16696
1335 1119
1336 13875
1337 2238
1345 1180
fn=runtime.gcFlushBgCredit
763 410
764 82
769 82
770 246
fn=runtime.gcMarkRootPrepare
59 196
64 147
67 49
71 441
72 98
73 98
74 98
78 441
79 98
80 98
81 98
97 539
98 98
106 441
107 49
109 49
110 294
113 49
114 147
115 245
116 245
117 196
118 98
fn=runtime.gcMarkTinyAllocs
1743 245
1746 2870
1747 1197
1748 2940
1751 84
1752 42
1753 168
1755 147
fn=runtime.gcParkAssist
722 20
723 4
727 12
728 4
729 16
fn=runtime.gcWakeAllAssists
711 289
712 49
713 49
714 98
715 49
716 147
fn=runtime.gcmarknewobject
1721 54165
1722 36110
1727 18055
1728 36110
1731 36110
1732 108330
1733 18034
1736 54165
1737 54165
1738 54165
fn=runtime.greyobject
1615 527650
1617 422120
1620 105530
1622 211060
1628 316590
1637 105530
1638 55209
1640 87127
1643 174254
1644 522762
1645 81301
1650 261381
1651 250467
1652 250467
1660 3638
1662 3636
1663 6
1665 10914
fn=runtime.markroot
164 27780
166 9260
169 35301
170 98
171 784
172 784
175 18128
176 98
177 1568
178 1470
181 8966
182 294
187 8868
190 343
192 26310
194 14208
198 833
199 4998
204 5831
208 833
209 4870
210 224
215 11662
250 12200
251 980
252 980
253 76
256 18520
fn=runtime.markroot.func1
215 9163
220 2499
221 6762
222 833
233 4165
234 833
238 2499
241 4165
242 1666
243 3332
245 833
248 3332
fn=runtime.markrootBlock
265 735
274 294
275 294
278 147
279 147
281 735
282 294
286 882
287 147
fn=runtime.markrootFreeGStacks
294 245
296 49
297 98
298 49
299 49
300 49
301 147
fn=runtime.markrootSpans
324 17760
334 10656
337 42624
338 21312
339 10656
342 49728
343 7104
344 693522
346 682278
347 454754
350 2842
351 4018
360 1666
364 392
369 980
377 196
378 1666
379 588
386 1764
391 392
392 392
396 1862
398 98
401 10656
fn=runtime.scanblock
1357 13150
1364 987256
1366 989601
1367 933506
1368 15040
1369 316182
1371 13382360
1372 4849147
1374 6472821
1375 4233104
1376 246330
1377 58815
1378 161043
1379 1035
1383 2445101
1384 2445101
1387 7890
fn=runtime.scanframeworker
1015 14385
1020 25893
1021 14385
1022 14385
1064 13474
1067 5754
1068 1966
1069 7864
1073 6737
1074 9447
1078 14385
1082 18618
1083 3408
1084 4311
1085 2270
1086 2272
1089 2272
1090 2272
1097 3402
1100 8631
fn=runtime.scanobject
1395 23304
1400 3884
1407 3884
1408 11652
1409 7768
1412 7768
1419 7768
1446 7768
1458 1812470
1459 909016
1474 1599528
1478 728128
1482 1613888
1492 636990
1493 615294
1497 11652
1498 235022
1499 11652
fn=runtime.scanstack
831 4998
832 3332
837 1666
843 833
846 1666
850 3332
858 2499
861 832
863 2499
867 1666
868 1666
869 833
871 1666
873 832
876 2
879 4998
880 4164
893 1666
894 832
898 4998
899 10297
900 11508
907 11662
925 3332
935 833
937 3780
938 2356
942 690
945 296
946 592
950 246
960 246
962 738
976 492
977 246
980 1476
983 984
990 4560
992 1374
1003 687
1004 687
1006 4998
1009 4164
fl=/usr/lib/go-1.22/src/runtime/mgcpacer.go
fn=runtime.(*gcControllerState).commit
1184 150
1188 50
1191 1
1196 49
1203 100
1204 550
1208 150
1211 50
1236 850
1237 50
fn=runtime.(*gcControllerState).endCycle
598 388
601 49
604 147
609 294
610 539
613 196
625 49
626 343
656 98
657 588
658 245
664 98
665 98
666 931
667 784
668 88
671 245
672 147
674 147
684 147
901 49
fn=runtime.(*gcControllerState).enlistWorker
691 980
702 588
706 392
710 1960
713 1566
714 4498
715 1956
716 2933
717 805
719 5868
720 1956
723 3
724 3
727 585
fn=runtime.(*gcControllerState).findRunnableGCWorker
731 1100
732 883
740 440
741 186
743 440
744 6
747 877
752 1087
756 3
757 6
773 3
774 3
775 12
779 6
785 194
788 6
809 3
810 9
811 9
812 3
816 18
fn=runtime.(*gcControllerState).heapGoalInternal
909 474735
911 94947
914 569682
920 94947
921 189894
947 569682
951 569682
fn=runtime.(*gcControllerState).init
369 5
370 1
371 1
372 1
373 1
374 3
379 3
1244 1
1248 1
1249 1
1252 9
1253 1
1297 1
1298 2
1299 1
fn=runtime.(*gcControllerState).markWorkerStop
846 15
848 6
849 3
850 3
859 9
fn=runtime.(*gcControllerState).memoryLimitHeapGoal
958 94947
959 94947
960 94947
961 94947
962 284841
1026 94947
1029 284841
1033 189894
1034 189894
1037 379788
1046 189894
1051 569682
1052 189894
1057 569682
1063 379788
1066 189894
fn=runtime.(*gcControllerState).resetLive
824 245
825 49
826 49
827 98
828 49
829 98
830 49
833 49
834 49
838 147
fn=runtime.(*gcControllerState).revise
490 90450
491 18090
492 72360
497 18090
498 18090
499 54270
503 18090
507 54270
513 18090
514 55183
515 36180
526 11869
536 45310
537 1826
540 913
542 54270
547 2620
550 524
560 87187
561 72360
574 18090
575 18090
589 180900
590 18090
591 18090
592 18090
901 18090
fn=runtime.(*gcControllerState).setMaxIdleMarkWorkers
1401 245
1402 98
1403 98
1405 98
1409 196
1410 49
1411 147
fn=runtime.(*gcControllerState).startCycle
384 245
385 98
386 49
387 49
388 49
389 49
390 49
391 49
392 49
393 49
394 49
401 196
402 147
403 294
405 343
416 98
420 98
426 2646
427 1176
431 98
448 343
453 49
454 49
456 147
466 147
fn=runtime.(*gcControllerState).trigger
1097 383795
1098 76759
1105 383795
1117 153518
1128 460554
1129 153518
1142 153518
1143 307036
1146 329812
1150 76759
1151 76759
1154 153518
1156 230277
1157 153518
1158 76759
1163 383795
fn=runtime.(*gcControllerState).update
861 476325
862 379884
863 94677
864 94677
865 94677
871 190530
874 154448
875 69
879 18041
881 285864
fn=runtime.checkIdleGCNoP
1375 94
1376 188
1377 94
fn=runtime.copystack
884 2
888 3
889 4
fn=runtime.gcControllerCommit
1425 245
1428 98
1431 98
1437 49
1438 49
1443 196
1444 49
1445 147
1446 147
fn=runtime.gcMarkTermination
901 98
fn=runtime.modulesinit
896 1
fn=runtime.newproc1
884 51
888 51
889 68
890 2
891 4
fn=runtime.readGOGC
1277 5
1278 4
1279 2
1280 1
1282 1
1285 4
fn=runtime.readGOMEMLIMIT
1323 5
1324 4
1325 2
1326 4
fl=/usr/lib/go-1.22/src/runtime/mgcscavenge.go
fn=runtime.(*mheap).allocSpan
151 2
fn=runtime.(*pageAlloc).scavenge
675 410
676 82
677 838
678 752
679 192
682 1672
685 792
689 328
fn=runtime.(*pageAlloc).scavenge.func1
682 968
683 352
684 264
fn=runtime.(*pageAlloc).scavengeOne
732 440
739 176
740 616
741 176
749 264
750 176
754 176
755 880
758 854
761 189
763 525
769 225
770 450
773 150
775 225
776 150
780 375
784 150
785 300
786 375
788 225
789 150
790 150
791 150
796 150
797 75
800 150
801 450
804 450
805 150
807 600
811 65
812 26
814 52
fn=runtime.(*pallocData).findScavengeCandidate
896 440
897 704
900 264
909 176
912 88
915 88
917 1881
919 2264
920 544
924 163
926 65
932 975
933 150
934 675
935 600
943 75
944 2025
945 1725
946 1725
947 690
956 823
957 570
964 300
971 75
972 75
976 542
978 28
980 84
985 56
986 28
990 422
fn=runtime.(*piController).next
1379 100
1380 50
1384 125
1392 100
1394 75
1399 250
1400 275
1401 100
1410 50
fn=runtime.(*scavChunkData).alloc
1287 3171
1318 476150
1319 476150
1323 190460
1324 627
1325 627
1327 380920
1328 190460
1330 1057
1332 285690
fn=runtime.(*scavChunkData).free
1292 270933
1335 451555
1336 270933
1340 180622
1341 944
1342 944
1344 270933
1347 90311
1348 270933
fn=runtime.(*scavengeIndex).alloc
1134 476150
1135 952300
1136 476150
1142 857070
1143 285690
1203 190460
1209 190460
1243 285690
1244 190460
1245 285690
1252 95230
1253 190460
1254 95230
fn=runtime.(*scavengeIndex).find
1080 288
1081 192
1082 380
1085 96
1086 192
1088 10
1092 94
1093 94
1094 94
1096 931
1098 3076
1102 176
1103 300
1106 13
1107 13
1114 2
1119 65
1122 6
1123 30
1203 600
1243 900
1244 600
1245 900
1282 900
1298 300
1302 376
1306 376
1310 496
1314 172
fn=runtime.(*scavengeIndex).free
1149 451555
1150 1083732
1151 451555
1152 812799
1155 722488
1156 90311
1157 31328
1164 90311
1165 90311
1166 7276
1168 270933
1203 180622
1209 180622
1243 270933
1244 180622
1245 270933
1252 90311
1253 180622
1254 90311
fn=runtime.(*scavengeIndex).grow
1068 465
1071 93
1072 372
1073 1
1075 372
fn=runtime.(*scavengeIndex).init
1057 5
1058 1
1059 1
1060 2
1061 1
1062 5
fn=runtime.(*scavengeIndex).nextGen
1176 49
1177 49
1178 49
1179 9
1181 98
1182 49
fn=runtime.(*scavengeIndex).setEmpty
1189 39
1190 104
1191 13
1192 78
1193 39
1203 26
1209 26
1243 39
1244 26
1245 52
1252 13
1253 39
1254 13
1287 39
fn=runtime.(*scavengerState).init
356 5
357 3
361 6
363 7
364 5
365 6
378 11
389 2
392 2
393 4
404 2
405 4
411 2
412 4
416 3
fn=runtime.(*scavengerState).init.func1
365 56
366 48
367 24
fn=runtime.(*scavengerState).init.func2
393 657
394 81
395 486
396 81
397 324
400 81
401 324
fn=runtime.(*scavengerState).init.func3
151 98
405 98
407 392
408 132
fn=runtime.(*scavengerState).init.func4
413 50
fn=runtime.(*scavengerState).park
419 120
420 24
421 120
424 24
425 24
426 69
fn=runtime.(*scavengerState).run
576 247
577 48
578 240
581 48
583 538
585 588
586 17
602 405
612 162
619 324
621 577
626 162
630 148
634 187
641 281
fn=runtime.(*scavengerState).sleep
465 293
466 25
467 150
471 101
486 25
490 100
493 50
499 25
500 100
503 50
504 25
507 75
509 25
515 50
516 25
523 100
526 25
545 350
549 225
550 25
560 75
fn=runtime.(*scavengerState).wake
436 595
437 119
438 476
440 48
443 48
451 48
452 48
453 96
455 119
456 357
fn=runtime.bgscavenge
649 5
650 2
652 3
653 2
655 1
656 96
657 96
658 46
659 22
661 25
662 75
fn=runtime.fillAligned
825 3460
846 692
847 1384
848 2076
851 692
fn=runtime.gcPaceScavenger
151 49
175 441
179 49
185 98
186 49
197 147
202 490
203 588
208 196
211 245
224 49
229 200
230 15
232 34
234 64
fn=runtime.sweepone
430 49
fl=/usr/lib/go-1.22/src/runtime/mgcstack.go
fn=runtime.(*stackScanState).addObject
163 1134
270 5670
271 1134
272 5670
274 687
275 687
276 1374
277 687
279 10380
282 894
290 5670
291 2268
292 4089
293 2955
294 1134
296 1134
297 3402
fn=runtime.(*stackScanState).getPtr
237 5890
238 22811
239 2011
240 4022
244 788
245 147
250 49
251 49
252 49
253 98
258 1035
259 2760
262 2499
263 98
264 98
266 4165
fn=runtime.(*stackScanState).putPtr
202 1725
203 2415
206 345
207 345
210 690
211 690
213 49
214 49
216 98
217 592
228 1478
229 345
230 1380
fn=runtime.binarySearchTree
311 15505
312 7336
313 11802
316 10206
317 10206
318 1134
319 2268
323 10206
324 4536
325 1134
326 4536
fn=runtime.scanstack
163 492
303 4165
332 690
333 690
334 394
335 1986
338 2832
339 299
340 299
342 2580
343 349
344 349
fl=/usr/lib/go-1.22/src/runtime/mgcsweep.go
fn=runtime.(*activeSweep).end
164 941675
165 564939
169 188313
170 941565
173 376626
174 376626
175 564939
fn=runtime.(*mcentral).cacheSpan
151 8206
152 8155
153 39157
154 1618
156 13074
157 6537
fn=runtime.(*mheap).alloc.func1
213 94576
453 94576
fn=runtime.(*mheap).nextSpanForSweep
66 361057
72 180504
73 730038
92 581349
98 902520
99 541512
100 1009095
101 581349
102 968915
104 193783
105 371414
107 16152
109 388670
112 180455
113 901171
117 49
118 196
fn=runtime.(*mheap).reclaimChunk
151 14624
152 1828
153 9140
156 3656
157 1828
fn=runtime.(*mspan).ensureSwept
151 5
152 5
153 20
154 5
459 25
463 5
464 15
471 10
472 5
486 10
487 27
492 15
fn=runtime.(*sweepLocked).sweep
499 1133844
502 188974
503 1134230
507 378144
508 188974
511 180624
514 377948
515 1511792
520 188974
521 188974
526 188974
528 377948
529 377948
547 755896
548 377948
549 378536
551 980
552 588
553 196
554 196
585 392
591 196
595 189170
599 944870
630 755896
637 1040364
641 577245
642 251580
649 188974
650 755896
651 566922
658 188974
659 188974
660 188974
661 188974
667 377948
668 755896
671 377948
676 755896
680 1322818
684 1511792
698 377948
700 377948
735 377948
737 84077
742 8178
743 16356
744 89958
745 16356
748 32712
750 18451
756 30303
758 8070
759 32280
762 4546
763 11082
765 9282
768 170523
770 682092
787 162940
791 81470
793 326267
807 162940
808 162940
809 162940
810 244410
813 81470
815 325880
819 445265
821 397736
fn=runtime.(*sweepLocker).tryAcquire
336 945300
337 378120
341 1134360
342 1250
345 1132860
348 944050
fn=runtime.bgsweep
213 624915435
271 5
272 7
275 1
276 1
277 3
278 1
299 3749797347
300 625311511
301 990236
302 15216
305 3124577175
309 624915435
310 624915435
314 624915386
315 624915386
317 49
318 49
453 624915435
fn=runtime.deductSweepCredit
892 473393
893 623859
895 58320
898 75237
899 75237
907 75237
908 75237
910 150474
926 433067
928 1081759
929 819338
930 311178
931 96
934 311034
940 75237
941 75237
945 300948
fn=runtime.finishsweep_m
206 49
230 245
238 147
246 98
254 147
255 66787
256 33320
257 6664
258 6664
266 147
268 49
269 147
fn=runtime.gcControllerCommit
213 98
453 49
fn=runtime.gcMarkTermination
152 49
153 490
156 98
157 98
fn=runtime.gcPaceSweeper
213 49
453 49
961 49
965 49
973 49
974 49
978 49
979 98
983 49
984 49
985 49
986 49
989 392
990 49
994 49
997 49
fn=runtime.gcSweep
84 147
221 49
fn=runtime.sweepone
152 625095432
153 2500561627
154 624915533
156 359798
157 179899
194 98
195 245
198 147
353 3125477165
354 1250190864
358 625095432
362 1250370763
363 625095432
364 1874746599
365 3124577665
372 361008
373 361008
374 98
377 360910
381 2520
387 1080570
389 359700
390 1079100
394 88924
401 359700
404 899495
406 719596
422 98
439 49
442 539697
443 1259195
fl=/usr/lib/go-1.22/src/runtime/mgcwork.go
fn=runtime.(*gcControllerState).findRunnableGCWorker
312 670
fn=runtime.(*gcWork).balance
288 28320
289 22606
290 150
292 16842
296 11228
297 784
298 196
300 16254
303 588
304 588
306 588
fn=runtime.(*gcWork).dispose
251 8880
252 5381
253 106
254 156
256 2
257 2
259 105
261 53
262 106
263 106
268 159
270 7051
275 122
276 61
278 5328
279 3
280 3
282 7104
fn=runtime.(*gcWork).init
100 212
101 212
102 53
103 159
104 52
106 106
107 106
fn=runtime.(*gcWork).put
113 10
115 4
120 8
121 2
122 4
136 12
137 2
143 4
146 6
fn=runtime.(*gcWork).putBatch
167 38190
168 12779
169 18948
173 49
174 98
179 343
180 294
182 49
187 882
188 196
189 735
192 196
193 98
195 147
fn=runtime.(*gcWork).tryGet
204 46645
205 9329
206 27987
207 102
208 102
211 18658
212 46450
214 18560
216 9475
217 18558
218 36332
220 392
221 784
225 738
226 1476
fn=runtime.(*workbuf).checkempty
342 13800
343 5520
346 8280
fn=runtime.(*workbuf).checknonempty
336 1970
337 788
340 1182
fn=runtime.findRunnable
312 445
fn=runtime.freeSomeWbufs
468 3124577175
470 624915435
471 2499661731
472 624915395
473 2499661580
475 440
486 40
487 40
488 120
fn=runtime.freeSomeWbufs.func1
475 440
476 120
477 680
478 120
479 160
482 120
483 160
485 120
fn=runtime.gcDrain
235 289
236 652
240 234
241 351
fn=runtime.gcDrainN
235 13705
236 48244
240 6650
241 13300
fn=runtime.gcMark
312 1764
fn=runtime.gcMarkDone.func3
312 1764
fn=runtime.getempty
352 5185
354 3062
355 988
356 1976
357 2964
362 988
364 4099
366 49
367 98
368 9
369 18
370 18
371 18
372 36
374 9
376 147
377 400
380 120
384 40
385 120
386 40
390 4851
391 2450
392 784
393 784
394 2352
395 49
397 2940
401 4728
fn=runtime.getempty.func1
377 280
378 240
379 120
fn=runtime.greyobject
153 3638
154 18184
158 7272
159 3636
fn=runtime.handoff
437 980
439 392
440 1176
441 392
442 196
443 2156
446 392
447 784
fn=runtime.prepareFreeWorkbufs
453 245
454 49
455 98
461 49
462 49
463 49
464 147
fn=runtime.putempty
408 8860
409 1772
410 7088
411 7088
fn=runtime.putfull
418 985
419 197
420 788
421 788
fn=runtime.trygetfull
427 46660
428 197
429 18664
430 394
431 788
433 36540
fl=/usr/lib/go-1.22/src/runtime/mheap.go
fn=runtime.(*mSpanList).insert
1735 285
1736 456
1740 114
1741 171
1744 3
1747 56
1749 57
1750 57
1751 171
fn=runtime.(*mSpanList).remove
1710 270
1711 216
1716 108
1717 162
1721 108
1722 162
1726 54
1728 54
1729 162
fn=runtime.(*mcache).allocLarge
495 172942
566 86471
fn=runtime.(*mcache).refill
571 24117
fn=runtime.(*mcache).releaseAll
571 328
fn=runtime.(*mcentral).cacheSpan
571 8206
fn=runtime.(*mcentral).grow
571 16210
fn=runtime.(*mheap).alloc
953 472880
957 94576
958 1418640
966 378304
fn=runtime.(*mheap).alloc.func1
958 1094692
961 94576
962 49644
964 527236
965 283728
fn=runtime.(*mheap).allocMSpanLocked
1107 472790
1108 94558
1110 283674
1111 190394
1113 110
1116 190350
1118 329724
1119 572544
1121 2556
1124 567216
1125 94536
1126 283608
fn=runtime.(*mheap).allocManual
944 52
986 260
987 52
990 260
fn=runtime.(*mheap).allocNeedsZero
592 283992
1019 473140
1020 672779
1021 94664
1022 747037
1024 189328
1025 189328
1026 189328
1044 283992
1045 189400
1050 273717
1051 51375
1066 189328
1067 283992
1069 567840
fn=runtime.(*mheap).allocSpan
1085 148
1088 370
1092 280
1093 70
1171 567768
1173 94628
1185 94628
1186 946302
1187 189227
1190 94606
1191 15
1192 120
1193 15
1197 94621
1198 189212
1199 74
1200 218
1201 94602
1210 283630
1241 472776
1243 567324
1244 378030
1246 465
1247 93
1251 279
1252 186
1257 378232
1260 189116
1262 94558
1277 94628
1280 94628
1283 283884
1284 189256
1288 361838
1297 189215
1303 6
1306 4
1315 283840
1321 2
1322 1
1325 189269
1329 1
1332 1
1333 1
1334 4
1336 3
1340 1324448
1343 283884
1344 756726
1347 11779
1348 70674
1351 402070
1352 378472
1353 378304
1356 189256
1357 283884
1358 189256
1359 189256
1360 94588
1361 283728
1362 94628
1363 36
1364 80
1366 80
1367 80
1369 283884
1372 378512
fn=runtime.(*mheap).freeManual
1583 200
1584 120
1587 40
1588 200
1589 40
1590 240
fn=runtime.(*mheap).freeSpanLocked
380 89580
388 89580
495 179120
592 268620
734 89540
735 447700
736 268620
737 447700
1142 268740
1144 447900
1145 39216
1146 13072
1151 76508
1592 447900
1593 89580
1595 89580
1596 80
1597 80
1600 447900
1601 179080
1604 626780
1608 179080
1611 179080
1612 537240
1620 268740
1621 358320
1622 358280
1623 537240
1626 179160
1627 179160
1628 89540
1629 358160
1630 179120
1632 80
1634 80
1635 120
1637 179160
1640 806220
1643 89580
1644 13072
1645 268740
fn=runtime.(*mheap).grow
1465 465
1466 93
1473 99
1478 186
1479 93
1480 465
1484 18
1485 12
1491 30
1494 25
1499 6
1514 2
1515 2
1522 30
1526 273
1527 267
1534 651
1538 279
1539 186
1540 186
1544 465
1545 372
1546 372
fn=runtime.(*mheap).init
742 5
743 1
746 7
747 9
748 8
749 8
750 8
751 8
752 8
761 3
765 684
766 272
769 7
770 3
fn=runtime.(*mheap).initSpan
380 94628
495 283780
571 94576
576 8105
592 283728
734 94576
735 472880
736 283728
737 378304
944 481226
1377 473140
1380 378512
1381 1143660
1382 337424
1384 378304
1385 94628
1386 10324
1387 52
1388 208
1389 52
1393 189152
1394 189152
1395 86471
1396 86471
1397 172942
1399 56735
1400 24354
1402 209
1404 48476
1406 24315
1410 94576
1411 94576
1412 94576
1413 472880
1414 283728
1419 378304
1431 94576
1441 197394
1443 94628
1449 189152
1450 378304
1453 189152
1458 94628
1459 283884
2199 189152
fn=runtime.(*mheap).reclaim
778 248220
785 239707
786 107766
792 13722
794 13722
795 13722
800 96054
802 136084
804 31086
806 13687
810 54748
811 27374
813 13687
817 1856
818 9252
820 28
824 17378
826 35
831 12971
832 5484
833 3640
836 8
840 13722
841 35
844 13722
845 13722
849 13722
850 41166
fn=runtime.(*mheap).reclaimChunk
858 12796
864 1828
868 5484
869 3656
872 12796
873 18290
874 244952
877 5484
878 23764
879 5484
880 7312
887 359776
888 1054148
889 234366
893 11762
894 15890
895 5490
896 3660
897 610
898 610
899 1830
900 1830
902 610
907 4270
914 6094
915 4884
917 9140
918 1828
919 1828
922 116992
928 14630
fn=runtime.(*mheap).setSpans
592 284008
995 283884
996 189256
997 189256
998 662396
999 3073904
1000 930048
1001 1395010
1002 186
1003 372
1005 1860034
1007 283884
fn=runtime.(*mheap).sysAlloc
592 115
fn=runtime.(*mspan).base
495 179080
fn=runtime.(*mspan).heapBits
495 119
fn=runtime.(*mspan).heapBitsSmallForAddr
495 2838
fn=runtime.(*mspan).init
380 94628
1680 94628
1682 94628
1683 94628
1684 94628
1685 94628
1686 94628
1687 94628
1688 94628
1690 94628
1691 94628
1692 94628
1693 94628
1695 94628
1696 94628
1698 94628
fn=runtime.(*mspan).initHeapBits
576 94576
fn=runtime.(*mspan).refillAllocCache
2091 197180
fn=runtime.(*mspan).typePointersOfUnchecked
571 2092
576 3884
fn=runtime.(*pageAlloc).findMappedAddr
592 370704
fn=runtime.(*sweepLocked).sweep
388 377948
495 392
571 575296
1551 1074480
2036 567510
2040 196
2041 392
2091 438277
2097 1176
fn=runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func3
1551 72630
1552 121050
1554 24210
1567 40350
1568 16140
1569 24210
fn=runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func4
1551 733230
1552 1222050
1554 244410
1567 407350
1568 162940
1569 244410
fn=runtime.SetFinalizer
571 5
576 5
592 15
678 5
681 10
690 5
694 10
695 10
698 20
fn=runtime.addfinalizer
1943 20
1944 4
1945 12
1946 4
1947 8
1948 20
1949 8
1950 8
1951 8
1952 36
1957 8
1971 16
fn=runtime.addspecial
495 4
592 12
1819 12
1820 4
1821 20
1822 40
1839 20
1840 16
1841 16
1848 4
1849 4
1851 16
1852 12
1854 8
1857 8
1858 4
1860 8
1861 8
1862 4
1863 4
1866 4
1867 4
1868 20
1910 8
1912 12
1913 10
1914 14
1917 9
1921 6
1922 4
fn=runtime.findObject
388 125347
495 124218
592 501993
678 334662
681 334662
690 167331
694 334662
695 334662
698 501388
fn=runtime.freeSomeWbufs
1732 624915586
fn=runtime.gcmarknewobject
495 18055
592 54165
734 18055
735 90275
736 54165
737 72220
2091 18055
2097 108330
fn=runtime.getempty
495 784
fn=runtime.greyobject
495 87127
576 87127
592 261381
734 261381
735 435635
736 261381
737 348508
2091 105530
2097 738710
fn=runtime.mallocgc
495 86471
566 24876
fn=runtime.markrootSpans
388 98
495 196
576 196
fn=runtime.newArenaMayUnlock
2238 375
2240 292
2241 8
2242 40
2243 16
2246 8
2249 134
2250 549132
2252 150
2260 225
fn=runtime.newMarkBits
2127 3404584
2131 1513304
2132 756252
2136 378126
2137 1512504
2142 1890630
2143 756327
2144 756327
2147 378126
2148 756327
2149 1512204
2154 75
2158 375
2164 75
2168 300
2179 75
2180 150
2185 150
2186 150
2188 75
2189 300
fn=runtime.nextMarkBitArenaEpoch
2216 245
2217 49
2218 147
2219 141
2220 22
2224 139
2226 25
2227 100
2230 98
2231 98
2232 147
2233 49
2234 196
fn=runtime.prepareFreeWorkbufs
1732 196
1773 49
1778 245
1779 98
1783 49
1784 196
1792 49
fn=runtime.recordspan
520 47995
524 9599
526 38400
528 14
531 4
533 20
534 2
537 6
538 4
539 7
540 7
542 7
543 12
544 2
545 3
548 57597
549 38398
550 28797
fn=runtime.removefinalizer
1982 5
1983 3
1984 2
1987 1
1988 1
1989 1
1990 3
fn=runtime.removespecial
495 1
592 3
1827 3
1828 1
1829 6
1830 11
1874 5
1875 4
1876 4
1883 1
1884 1
1886 4
1889 2
1891 1
1894 2
1895 1
1897 2
1898 1
1900 1
1901 1
1902 5
1910 2
1912 3
1913 1
1914 2
1917 6
fn=runtime.scanobject
576 3884
592 11652
708 3884
709 46608
fn=runtime.schedinit
1706 121
fn=runtime.spanOfHeap
388 5
495 10
592 15
678 5
681 10
690 5
694 10
695 10
698 20
718 5
719 5
725 50
728 10
fn=runtime.stackalloc
495 6
1732 18
fn=runtime.stackpoolalloc
495 46
fn=runtime.stackpoolfree
388 19
592 57
708 19
709 213
fn=runtime.sweepone
388 180455
fn=runtime.wbBufFlush1
495 98
576 98
592 294
734 98
735 490
736 294
737 392
2091 18683
2097 93415
fl=/usr/lib/go-1.22/src/runtime/mpagealloc.go
fn=runtime.(*pageAlloc).alloc
107 380466
112 3756
118 189292
128 1878
137 1878
350 9390
875 473235
876 94647
880 473233
881 5
887 473230
890 664400
891 5634
892 3756
897 7512
898 5634
899 1878
904 92768
905 185536
906 276
914 460
918 565446
923 470892
924 182
926 472770
1015 189292
1018 189292
fn=runtime.(*pageAlloc).allocRange
107 852308
118 567985
128 95876
137 95215
350 952150
573 567324
574 94554
576 378216
577 189108
578 189108
581 472770
583 93893
584 751144
585 375572
586 657251
589 1322
590 5949
591 2644
592 3966
593 5288
599 661
600 8593
601 2644
602 3305
604 567324
605 661217
fn=runtime.(*pageAlloc).allocToCache
107 75
112 45
118 60
128 15
137 15
350 165
fn=runtime.(*pageAlloc).find
112 183544
128 183544
137 91772
144 5096982
150 4871623
350 458860
650 556608
651 92768
694 185536
697 92768
698 92768
709 834912
731 278304
732 2961724
734 4170258
735 1390086
739 1481858
742 7877154
749 2780172
750 1215798
764 8375893
765 6058807
766 4747094
770 1187924
775 8335357
777 1774983
778 2958305
782 904
783 3616
789 1900662
796 924732
798 385178
804 770346
805 128391
810 2896
813 596181
814 135623
816 1088
818 460
824 1389090
825 129295
828 904
829 904
843 458860
844 183544
854 458860
858 275316
859 642404
860 734176
1007 3676549
1010 1183322
1015 590757
1018 1772271
1023 128391
1026 256782
fn=runtime.(*pageAlloc).find.func1
709 4100598
710 2733732
713 376217
714 752434
715 921648
722 2050299
fn=runtime.(*pageAlloc).findMappedAddr
614 463380
615 92676
619 92676
620 926760
631 370704
fn=runtime.(*pageAlloc).free
107 628256
118 538078
128 269354
137 90210
350 451010
936 447900
937 89580
940 447900
941 18
943 447900
944 179160
947 8
948 8
949 8
950 40
953 179144
954 179144
956 179144
958 266850
959 889500
962 2488
963 4354
964 4976
968 2488
969 4354
972 537480
973 268740
fn=runtime.(*pageAlloc).grow
107 1116
128 187
137 187
350 281
357 465
358 93
362 93
363 93
367 186
370 930
375 186
376 186
377 465
378 1
380 186
381 93
386 1023
391 279
392 3
400 1117
401 558
404 5
405 2
408 3
412 2
415 1
420 5
422 651
428 836
429 279
fn=runtime.(*pageAlloc).init
305 5
306 8
314 4
317 4
320 3
323 3
326 6
329 8
332 2
333 3
fn=runtime.(*pageAlloc).scavengeOne
112 150
128 264
137 88
350 1591
1015 264
1018 176
fn=runtime.(*pageAlloc).sysGrow.func1
167 11100
168 3700
176 7400
177 1850
fn=runtime.(*pageAlloc).update
107 2030955
128 188248
137 185682
167 4341600
168 5427114
350 928410
485 1106394
486 184399
489 368798
490 368798
493 558329
496 1648044
497 549348
498 549348
499 916303
501 1622430
502 1283
505 5132
508 12830
512 24377
513 1905
515 1322
519 2488
525 10264
540 4986405
546 1628043
547 1628043
550 542681
553 6513540
554 15201890
555 1085666
556 5428330
557 636682
559 1346952
563 544659
fn=runtime.(*pageCache).flush
107 255
118 28
128 426
137 535
350 1174
fn=runtime.(*pallocBits).summarize
997 369504
1000 369504
1001 554256
1002 369504
fn=runtime.(*scavengeIndex).find
107 282
112 26
118 437
fn=runtime.(*scavengeIndex).free
112 180622
fn=runtime.(*scavengeIndex).grow
107 279
fn=runtime.(*scavengeIndex).sysGrow
107 930
fn=runtime.mergeSummaries
997 1085666
1000 1085666
1001 1628499
1002 1085666
1031 9228161
1034 4342664
1035 13027992
1036 16827823
1041 2171332
1046 2171332
1047 20627654
1049 11399493
1054 30398648
1055 3799831
1062 22798986
1069 18999155
1070 3799831
1075 2171332
fl=/usr/lib/go-1.22/src/runtime/mpagealloc_64bit.go
fn=runtime.(*pageAlloc).sysGrow
100 558
101 744
117 372
118 930
119 465
120 1860
122 460
123 460
130 744
144 651
147 2604
149 5580
155 3272
156 51
160 465
167 1400
168 8280
170 2315
171 920
174 950
179 25
180 15
181 20
185 842
186 279
fn=runtime.(*pageAlloc).sysGrow.func1
109 2775
110 925
111 3700
fn=runtime.(*pageAlloc).sysGrow.func2
117 1840
118 920
119 460
120 3680
121 1380
122 460
123 460
fn=runtime.(*pageAlloc).sysGrow.func3
130 3680
131 920
132 5060
fn=runtime.(*pageAlloc).sysInit
71 5
74 36
75 45
78 5
79 15
80 10
85 20
86 55
88 3
fn=runtime.(*scavengeIndex).sysGrow
191 930
192 1488
208 186
209 186
210 372
211 372
214 372
217 560
222 744
223 1488
224 2232
228 746
231 373
232 6
233 3
235 2
236 1
238 3
239 1
242 930
fn=runtime.(*scavengeIndex).sysInit
248 5
251 3
252 3
253 9
254 5
fl=/usr/lib/go-1.22/src/runtime/mpagecache.go
fn=runtime.(*mheap).allocSpan
26 94606
fn=runtime.(*pageAlloc).allocToCache
119 75
120 15
124 60
130 120
132 15
133 75
134 30
138 60
139 15
140 30
163 60
164 15
165 15
168 135
171 195
181 60
182 75
fn=runtime.(*pageCache).alloc
37 473030
38 283818
41 189212
42 22
43 132
44 132
45 22
46 176
48 378336
fn=runtime.(*pageCache).allocN
57 472920
58 185221
59 189168
60 472660
62 468
63 416
64 104
65 52
66 416
fn=runtime.(*pageCache).flush
26 490
78 2450
79 7
81 504
82 1449
84 7
85 7
89 1917
90 1896
91 322
94 545
96 2010
97 941
103 125
104 5
106 49
107 21
108 21
fl=/usr/lib/go-1.22/src/runtime/mpallocbits.go
fn=runtime.(*pageAlloc).allocToCache
21 105
63 60
105 30
376 15
382 15
fn=runtime.(*pageAlloc).free
68 56
359 8
364 358910
fn=runtime.(*pageAlloc).scavengeOne
364 150
fn=runtime.(*pageBits).clearRange
68 1938
72 556677
73 1113354
74 371118
76 646
77 2584
80 369826
81 748813
82 1757520
83 527256
85 18322
87 45805
88 36974
89 110
92 82449
93 27483
fn=runtime.(*pageBits).popcntRange
110 476075
111 285303
112 3762
114 474365
115 194433
116 479052
117 1984092
119 9374
120 37496
121 18748
124 79679
125 14061
fn=runtime.(*pageBits).setRange
26 1338
30 286686
31 573372
32 191124
34 446
35 1338
38 190232
39 385304
40 812484
41 270828
43 9680
45 19360
46 26204
47 668
50 43560
51 14520
fn=runtime.(*pageCache).allocN
393 283752
395 291622
396 197038
398 19723
402 378288
403 279781
406 3935
409 3935
414 11841
fn=runtime.(*pageCache).flush
68 763
359 218
fn=runtime.(*pallocBits).find
236 468325
237 187330
238 33
239 165
240 187264
241 374528
251 33
252 160
253 40
254 120
257 99
fn=runtime.(*pallocBits).findSmallN
274 2186616
275 845948
276 1691896
278 318399
282 209150
285 468160
287 313725
288 313725
289 42518
292 9346
293 196520
294 349268
296 10943
393 196520
395 653438
396 545832
398 530312
402 552006
403 377350
406 174656
409 174656
414 177828
fn=runtime.(*pallocBits).summarize
140 5756142
141 4456368
142 2970912
143 624878
144 624878
146 860578
147 860578
150 860578
151 2581734
154 1721156
158 371364
161 1860
163 578916
165 369504
167 320184
172 838440
173 394560
181 986400
182 596118
188 4278
190 4278
192 18632
193 18321
195 9805
196 4138
197 328
202 19395
203 21448
204 2053
206 4412
209 4412
213 10108
214 2210
215 4420
216 2210
217 12976
218 8527
219 1897
224 49320
fn=runtime.(*pallocData).allocRange
349 95290
431 476450
433 95290
434 571740
435 476450
fl=/usr/lib/go-1.22/src/runtime/mprof.go
fn=runtime.(*lockTimer).begin
585 345
586 74
588 69
589 488
592 823
593 10
596 79
597 5
599 207
fn=runtime.(*lockTimer).end
601 352
602 138
604 202
605 5
606 35
609 202
611 64
613 207
fn=runtime.(*mLockProfile).recordUnlock
668 6250129938
669 2500051972
672 7499578776
675 3750077958
fn=runtime.gcMarkTermination
206 49
207 98
208 392
209 49
210 49
361 49
fn=runtime.mProf_Flush
189 49
190 49
191 98
192 98
193 49
371 245
372 49
373 49
377 294
378 49
379 294
380 98
381 49
382 49
383 147
fn=runtime.mProf_FlushLocked
389 245
391 196
392 49
393 147
402 147
fl=/usr/lib/go-1.22/src/runtime/mranges.go
fn=runtime.(*addrRanges).add
43 465
48 186
142 279
148 837
161 92
336 465
348 279
354 187
355 1291
356 468
357 93
365 93
368 738
369 1
372 2
376 4
391 2
392 31
394 11
396 186
397 279
fn=runtime.(*addrRanges).findSucc
148 736
265 558
272 744
273 1116
297 924
298 1104
302 744
fn=runtime.(*addrRanges).init
254 5
255 1
257 1
258 6
259 5
260 1
261 5
fn=runtime.(*pageAlloc).alloc
148 567324
fn=runtime.(*pageAlloc).find
131 3616
fn=runtime.(*pageAlloc).find.func1
131 1743083
148 1228864
154 5467464
fn=runtime.(*pageAlloc).free
148 358320
fn=runtime.(*pageAlloc).grow
148 372
fn=runtime.(*pageAlloc).scavengeOne
148 375
fn=runtime.(*pageAlloc).sysGrow
43 485
48 25
142 980
148 1915
fn=runtime.(*pageCache).flush
148 21
fn=runtime.(*scavengeIndex).find
181 6
182 12
194 11
195 11
196 11
197 22
200 22
211 220
223 96
225 205
227 177
229 513
fn=runtime.(*scavengeIndex).free
148 451555
217 7276
223 90311
225 180622
227 180622
229 180622
fn=runtime.(*scavengeIndex).init
180 2
181 2
182 4
185 8
fn=runtime.(*scavengeIndex).nextGen
148 147
217 9
223 49
225 98
227 98
229 49
fn=runtime.(*scavengeIndex).sysGrow
43 375
48 5
142 382
148 939
fn=runtime.addrRange.subtract
60 3230
61 1293
62 3225
63 1
65 3
67 1
70 5
148 5
154 4524
fn=runtime.makeAddrRange
33 4650
35 8370
38 2790
fl=/usr/lib/go-1.22/src/runtime/msize_allocheaders.go
fn=runtime.growslice
18 209
20 277
21 6
25 289
26 857
fl=/usr/lib/go-1.22/src/runtime/mspanset.go
fn=runtime.(*atomicHeadTailIndex).incTail
376 969470
377 387788
379 387788
383 581682
fn=runtime.(*spanSet).pop
141 1116195
143 188861
145 223239
146 223239
147 446478
149 137512
153 188861
154 755444
167 566583
168 566583
178 377722
183 188861
188 188861
189 377722
190 566925
199 188861
213 377722
215 342
218 342
220 755786
282 188861
321 342
322 684
332 566583
337 635339
347 223239
357 223239
362 188861
398 188861
403 188861
fn=runtime.(*spanSet).push
74 969470
76 1163364
77 777188
80 193894
82 581682
83 387788
84 384564
88 1612
91 1612
92 4836
97 1612
98 4836
100 56
101 112
104 448
105 168
113 56
114 112
125 4836
129 1612
130 3224
131 1612
136 195506
137 581682
282 193894
289 56
403 193894
fn=runtime.(*spanSet).reset
230 66640
231 13328
232 27864
236 13328
237 26656
243 1208
244 1208
245 2416
247 2416
253 2416
261 1208
264 1208
267 13328
268 13328
269 39984
282 1208
321 1208
322 2416
337 26656
347 26656
357 13328
388 13328
fn=runtime.(*spanSetBlockAlloc).alloc
312 8060
313 4836
314 6172
316 483
fl=/usr/lib/go-1.22/src/runtime/mstats.go
fn=runtime.(*consistentHeapStats).acquire
776 1107858
777 1477168
778 369262
779 738524
785 48
787 2585026
788 2585002
fn=runtime.(*consistentHeapStats).release
805 1107858
806 1477144
807 369262
808 738524
814 48
816 1107858
fn=runtime.(*cpuStats).accumulate
938 98
941 49
942 49
943 49
944 49
950 49
951 49
954 49
955 98
956 49
957 196
960 49
961 49
962 98
965 245
966 147
976 294
977 49
fn=runtime.(*mheap).allocSpan
649 4
fn=runtime.(*scavengerState).init.func3
649 196
fn=runtime.(*sysMemStat).add
657 1142493
658 1904155
659 2630501
663 1142493
fn=runtime.gcMarkTermination
649 49
fn=runtime.gcPaceScavenger
649 98
fn=runtime.init.4
345 1
fl=/usr/lib/go-1.22/src/runtime/mwbbuf.go
fn=runtime.(*wbBuf).reset
79 13930
87 13930
93 6965
fn=runtime.atomicwb
143 12
146 6
147 6
fn=runtime.wbBufFlush
166 13767
170 13767
180 27534
183 13767
fn=runtime.wbBufFlush.func1
180 22945
181 13767
182 13767
fn=runtime.wbBufFlush1
195 31825
197 12730
198 25460
199 25460
203 6365
205 25460
228 6365
230 289046
231 77138
240 77204
241 38602
242 618
246 18683
247 18683
248 18585
250 98
253 196
254 588
255 98
258 196
259 192
260 48
262 38902
263 100
267 44555
269 25460
270 19095
fl=/usr/lib/go-1.22/src/runtime/nbpipe_pipe2.go
fn=runtime.netpollinit
10 9
fl=/usr/lib/go-1.22/src/runtime/netpoll.go
fn=internal/poll.runtime_pollOpen
238 5
239 4
240 3
241 1
242 5
245 1
246 4
249 2
250 2
252 1
254 1
255 3
256 2
257 1
258 1
259 1
260 1
261 1
262 1
263 1
264 1
266 4
267 2
268 3
269 5
fn=internal/poll.runtime_pollServerInit
209 4
210 1
211 2
fn=runtime.(*pollCache).alloc
686 5
687 1
688 4
696 4
697 54
698 16
699 32
700 16
703 3
704 2
706 1
707 4
fn=runtime.(*pollCache).free
291 5
294 3
298 1
299 2
300 1
302 1
304 1
306 2
307 4
308 1
309 1
310 5
fn=runtime.(*pollDesc).publishInfo
153 4
156 2
157 4
159 2
160 4
162 10
165 2
166 10
169 2
fn=runtime.(*pollDesc).setEventErr
175 2
176 1
178 3
181 5
188 1
fn=runtime.findRunnable
226 402
676 372
681 39
fn=runtime.init
724 4
fn=runtime.netpollGenericInit
213 5
214 2
216 1
217 2
218 1
219 1
221 1
223 3
fn=runtime.startTheWorldWithSema
226 98
681 392
fn=runtime.sysmon
226 191
fl=/usr/lib/go-1.22/src/runtime/netpoll_epoll.go
fn=runtime.netpoll
98 1026
99 527
103 658
105 171
107 34
109 56
110 56
116 33844
117 171
118 1539
119 342
131 171
133 1032
134 9
135 4
139 4
140 2
144 1
148 1
149 8
150 1
152 1
168 3
172 684
fn=runtime.netpollBreak
70 5
72 1
77 2
78 4
79 2
91 3
fn=runtime.netpollinit
23 5
25 1
26 2
30 1
31 2
35 2
38 2
39 1
40 2
44 2
45 2
46 3
fn=runtime.netpollopen
52 5
53 2
54 1
55 1
56 1
57 5
fl=/usr/lib/go-1.22/src/runtime/os_linux.go
fn=runtime.fcntl
452 18
453 60
454 24
fn=runtime.futexsleep
62 1995
68 1994
69 2656
70 987
73 332
74 332
75 3318
76 993
fn=runtime.futexwakeup
81 1950
82 5850
83 1950
84 1950
fn=runtime.getHugePageSize
319 5
320 2
321 10
322 2
326 9
327 5
328 3
331 1
332 1
333 3
336 3
340 3
fn=runtime.getproccount
97 8
106 1028
107 8
108 2
112 40
113 56
114 36
115 12
118 4
121 3
fn=runtime.initsig
500 116
501 174
502 58
fn=runtime.mcommoninit
375 48
376 30
fn=runtime.minit
383 30
384 6
389 36
390 18
fn=runtime.minitSignalMask
434 48
fn=runtime.newosproc
166 25
167 15
177 5
178 5
179 55
188 5
190 20
197 15
434 85
fn=runtime.newosproc.func1
179 35
180 60
183 10
184 20
fn=runtime.osinit
343 4
344 2
345 2
347 2
fn=runtime.schedinit
359 1
434 7
fn=runtime.setsig
464 168
465 112
466 56
467 56
472 112
474 168
475 112
478 112
481 56
482 168
483 168
fn=runtime.sighandler
891 381
892 1524
fn=runtime.signalM
550 635
551 1397
552 635
fn=runtime.signalstack
509 6
fn=runtime.sysSigaction
519 342
520 1254
532 7
539 342
fn=runtime.sysargs
233 5
234 1
237 64
238 62
242 1
245 1
247 6
248 10
249 3
fn=runtime.sysauxv
294 5
296 274
297 88
299 40
302 8
304 44
305 2
307 42
308 3
312 68
314 7
fl=/usr/lib/go-1.22/src/runtime/os_linux_generic.go
fn=runtime.minitSignalMask
31 1296
fn=runtime.setsig
36 56
fl=/usr/lib/go-1.22/src/runtime/pagetrace_off.go
fn=runtime.pageTraceFree
15 89540
fl=/usr/lib/go-1.22/src/runtime/panic.go
fn=runtime.isAbortPC
1442 381
1443 127
1444 127
1447 635
fl=/usr/lib/go-1.22/src/runtime/preempt.go
fn=runtime.doSigPreempt
343 1489
fn=runtime.init.5
316 5
317 3
318 2
319 3
320 3
322 3
323 2
337 4
fn=runtime.isAsyncSafePoint
287 20
362 20
363 12
368 10
373 14
374 10
378 14
383 10
384 2
399 10
400 4
404 5
406 5
417 5
419 4
420 2
432 5
fn=runtime.newstack
287 1118
fn=runtime.resumeG
257 4998
258 4998
264 833
269 3332
270 833
272 2499
275 833
279 2499
fn=runtime.suspendG
104 4165
105 12495
122 833
162 6472
166 5831
173 1666
174 833
175 2499
189 5831
191 1538
211 1666
229 833
243 833
246 833
fl=/usr/lib/go-1.22/src/runtime/proc.go
fn=runtime.(*p).init
5460 60
5461 12
5462 12
5463 72
5464 48
5465 36
5466 60
5467 36
5468 4
5473 2
5475 33
5490 24
5493 24
5494 36
6469 24
6470 167
6471 60
6478 60
fn=runtime.(*scavengerState).park
408 120
fn=runtime.(*scavengerState).sleep
408 125
fn=runtime.(*scavengerState).wake
6967 48
6968 48
fn=runtime.acquireSudog
418 21
427 7
428 7
429 14
430 3
432 24
438 3
440 9
441 43
444 20
445 28
446 30
447 28
448 14
451 7
452 28
fn=runtime.acquirep
5740 1440
5742 288
5748 864
5750 288
5751 288
5755 864
fn=runtime.allgadd
618 85
619 51
623 17
624 246
625 85
626 6
628 51
629 17
630 51
1040 34
fn=runtime.allocm
2057 25
2058 10
2063 5
2065 5
2066 30
2067 4
2072 10
2108 15
2109 30
2110 10
2114 10
2117 35
2119 25
2121 30
2122 2
2125 7
2126 10
2127 22
fn=runtime.bgsweep
408 348
fn=runtime.casGToWaiting
1204 740
1206 148
1207 296
1208 444
fn=runtime.casfrom_Gscanstatus
1047 4165
1056 2499
1057 4165
1060 833
1061 4165
1062 2499
1065 833
1071 3332
fn=runtime.casgstatus
1105 4893
1106 17941
1113 3262
1114 1631
1122 6524
1139 3262
1141 4464
1142 92
1144 2232
1146 3262
1147 4299
1156 396
1160 46
1161 69
1162 23
1163 350
1164 213
1178 166
1179 190
1186 419
1189 23
1190 46
1191 350
1195 92
1196 276
1197 276
1199 594
fn=runtime.castogscanstatus
1075 4165
1077 5831
1079 833
1081 3332
1082 2499
1086 2499
fn=runtime.checkIdleGCNoP
3657 675
3664 634
3665 205
3667 376
3668 470
fn=runtime.checkRunqsNoP
3618 945
3619 7155
3620 7860
3634 540
6462 3240
6464 8100
6609 240
6610 240
6611 240
6612 240
6613 960
6614 1440
fn=runtime.checkTimers
3945 3565
3948 713
3949 713
3950 1796
3954 1559
3956 3842
3959 148
3960 59
3962 281
3967 479
3968 294
3972 50
3974 75
3975 100
3976 124
3979 150
3983 25
3992 267
3996 25
3998 318
fn=runtime.checkTimersNoP
3640 675
3641 7020
3642 2976
3643 29
3644 7124
3650 540
6462 3240
6464 9720
fn=runtime.checkdead
5279 538
5830 1345
5836 1076
5844 538
5853 1345
5857 1883
5858 538
5859 807
fn=runtime.checkmcount
854 30
865 12
866 18
870 24
5279 12
fn=runtime.closechan
6962 2
fn=runtime.doInit1
7147 78
7148 26
7149 26
7150 6
7151 37
7154 11
7161 66
7167 22
7172 22
7173 153
7174 60
7175 20
7176 40
7179 33
7189 11
7190 20
7191 42
7192 20
7196 11
7198 33
fn=runtime.doSigPreempt
1040 100
fn=runtime.entersyscall
4389 213
4390 213
4391 213
fn=runtime.entersyscallblock
4440 36
4441 24
4443 12
4444 12
4445 12
4446 48
4447 36
4451 24
4452 24
4453 36
4454 24
4455 48
4464 36
4465 72
4472 60
4475 36
4477 36
4478 36
fn=runtime.entersyscallblock_handoff
4480 60
4481 12
4482 12
4487 36
4488 36
fn=runtime.execute
3093 1125
3094 450
3096 1350
3105 1368
3106 1368
3107 675
3108 450
3109 225
3110 675
3111 249
3112 603
3116 225
3117 474
3121 225
3122 225
3132 675
fn=runtime.exitsyscall
4502 249
4503 166
4505 83
4506 332
4510 83
4511 83
4512 166
4513 332
4516 166
4524 249
4525 83
4545 332
4547 249
4548 83
4554 166
4555 166
4556 166
4561 249
4563 83
4565 166
4570 249
fn=runtime.exitsyscallfast
4601 249
4605 231
4610 296
4611 870
4613 166
4614 195
4615 65
4618 260
4620 18
4625 54
4626 18
4627 180
4646 36
4647 72
fn=runtime.exitsyscallfast.func1
4627 126
4628 54
4645 54
fn=runtime.exitsyscallfast_pidle
4683 90
4684 18
4685 54
4686 126
4687 3
4688 9
4690 18
4691 18
4692 36
4693 72
fn=runtime.exitsyscallfast_reacquired
4658 260
4659 65
4660 325
4681 195
fn=runtime.findRunnable
928 91
929 87
930 87
3139 1374
3140 458
3147 796
3148 508
3149 121
3150 121
3152 1161
3153 179
3160 1340
3163 1161
3177 774
3178 1100
3179 440
3180 15
3188 1950
3189 1
3190 4
3191 1
3192 4
3193 5
3198 1149
3203 1532
3208 1507
3209 125
3213 716
3214 127
3215 508
3216 127
3217 381
3218 620
3229 1396
3249 1914
3250 450
3251 83
3254 828
3255 450
3257 288
3259 153
3262 13
3266 355
3276 1333
3297 2421
3315 894
3318 894
3319 894
3322 149
3323 593
3324 5
3325 5
3327 288
3332 1148
3338 720
3341 576
3342 144
3380 719
3381 153
3382 135
3383 270
3398 135
3399 270
3412 135
3414 945
3415 270
3422 135
3423 270
3444 1080
3448 1173
3449 17
3450 169
3453 34
3457 34
3458 51
3461 17
3462 17
3466 51
3470 136
3472 17
3473 17
3474 17
3475 17
3481 17
3482 51
3483 17
3484 51
3485 26
3486 13
3488 4
3489 4
3501 4
3502 4
3504 4
3506 653
3507 12
3508 48
3512 140
3513 136
6749 408
6753 1915
6754 25
6758 358
6759 358
6760 716
6962 8
fn=runtime.forEachG
661 245
662 49
663 7154
664 3332
666 49
667 147
fn=runtime.forEachPInternal
1920 740
1921 148
1922 296
1924 148
1925 592
1928 444
1929 1037
1932 8288
1933 3552
1934 6512
1937 148
1945 10735
1946 8694
1947 5796
1948 2898
1952 592
1953 148
1956 592
1960 17318
1961 10656
1965 1776
1966 5335
1967 1
1973 1
1974 3
1975 1775
1981 293
1987 850
1988 145
1991 25
1994 296
1997 7992
1998 5328
2003 148
2004 741
2005 148
2006 148
2007 444
fn=runtime.forcegchelper
317 5
318 6
321 1
322 2
325 2
326 2
328 2
332 3
408 12
fn=runtime.gcAssistAlloc
342 2
fn=runtime.gcAssistAlloc1
1206 236
1207 708
fn=runtime.gcBgMarkWorker.func2
1206 3
1207 9
fn=runtime.gcFlushBgCredit
6896 82
fn=runtime.gcMarkDone
1895 1287
fn=runtime.gcMarkDone.forEachP.func5
1895 792
1896 297
1905 198
1906 198
1907 396
1908 297
fn=runtime.gcMarkRootPrepare
643 98
fn=runtime.gcMarkTermination
1206 49
1207 196
1895 637
fn=runtime.gcMarkTermination.forEachP.func6
1895 392
1896 147
1905 98
1906 98
1907 196
1908 147
fn=runtime.gcWakeAllAssists
6949 49
6950 49
fn=runtime.gcstopm
3059 605
3062 121
3065 363
3066 41
3069 82
3073 242
3074 121
3075 242
3076 363
3077 242
3078 144
3080 121
3081 121
3082 363
fn=runtime.getGodebugEarly
716 6
725 257
726 62
729 436
730 186
731 620
733 124
735 2
739 5
fn=runtime.gfget
5072 85
5073 34
5074 68
5093 17
5094 17
5095 68
6962 51
6981 17
6982 34
fn=runtime.globrunqget
6428 640
6431 1012
6432 12
6435 1125
6436 250
6439 375
6442 500
6446 500
6448 250
6449 125
6450 375
6454 375
6937 125
6938 125
6939 250
6940 250
6941 120
fn=runtime.gopark
385 684
389 124
390 124
391 124
392 248
395 592
396 289
397 124
398 124
399 124
400 124
402 248
403 324
1040 124
fn=runtime.goschedIfBusy
358 22824
359 7608
362 22824
363 22824
fn=runtime.goschedImpl
1040 100
3931 300
3932 200
4039 500
4040 300
4041 100
4042 300
4046 300
4047 100
4056 100
4057 100
4058 100
4059 100
4061 200
4062 100
4065 100
6396 100
6397 100
6910 200
6911 300
6912 8
6914 96
6916 100
fn=runtime.gosched_m
4069 5
4070 2
fn=runtime.handoffp
2905 95
2910 23
2911 57
2912 57
6610 19
6611 19
6612 19
6613 57
6614 76
fn=runtime.incidlelocked
5818 60
5819 12
5820 24
5821 36
5822 6
5824 12
5825 36
fn=runtime.init.6
313 5
314 2
315 4
fn=runtime.injectglist
3761 1290
3762 307
3763 627
3765 49
3766 49
3775 49
3778 392
3780 98
3781 196
3785 49
3786 49
3787 49
3788 98
3808 98
3809 98
3810 23
3811 23
3812 23
3813 92
3814 69
3817 52
3818 26
3820 90
3821 2
3822 2
3824 52
3825 2
3826 2
3827 2
3828 8
3829 6
3832 26
3833 174
3835 78
6421 50
6422 50
6423 25
6896 34
6910 2
6911 6
6914 2
6916 2
6922 50
6925 25
6926 75
6927 2
6929 24
6931 25
6937 2
6938 4
6939 4
6940 4
6941 2
6962 258
fn=runtime.injectglist.func1
3790 125
3791 220
3792 25
3793 25
3795 50
3796 50
3797 1
3798 1
3802 72
3803 24
3804 24
3806 75
fn=runtime.mReserveID
876 30
879 30
883 6
884 6
885 24
fn=runtime.main
146 8
147 2
151 2
157 1
165 1
168 1
171 5
182 1
184 3
190 1
191 2
195 2
200 5
203 1
204 8
210 1
212 6
213 2
252 17
253 5
258 3
260 2
262 1
263 1
265 4
271 3
281 2
290 2
293 2
295 2
5168 2
5169 2
5206 2
5207 1
7142 111
7143 15
fn=runtime.main.func1
171 5
172 5
173 3
fn=runtime.malg
4855 140
4856 112
4857 487
4858 28
4859 308
4862 112
4863 28
4866 112
4868 84
fn=runtime.malg.func1
4859 224
4860 112
4861 84
fn=runtime.markroot
1040 1666
fn=runtime.markroot.func1
1040 49
fn=runtime.markrootFreeGStacks
6962 49
fn=runtime.mcommoninit
889 30
890 6
893 30
897 6
899 18
900 12
902 6
905 10
907 6
908 18
909 18
914 24
918 6
919 6
922 12
925 18
fn=runtime.mput
6363 1048
6366 524
6367 262
6368 262
6369 262
6370 524
fn=runtime.mspinning
2789 4
2790 2
fn=runtime.mstart0
1660 18
1661 12
1663 18
1664 6
1682 24
1685 6
1686 6
fn=runtime.mstart1
1702 30
1703 12
1705 24
1715 6
1716 12
1717 12
1719 18
1720 6
1724 24
1725 2
1728 25
1729 8
1732 17
1733 8
1734 12
1736 5
fn=runtime.mstartm0
1745 5
1749 2
1753 2
1754 3
fn=runtime.newm
2631 25
2642 5
2644 20
2645 5
2646 10
2647 70
2676 5
2677 5
2678 15
fn=runtime.newm1
2680 25
2681 15
2700 10
2701 10
2702 10
2703 15
fn=runtime.newproc
4874 85
4875 17
4877 221
4887 51
fn=runtime.newproc.func1
4877 136
4878 17
4880 34
4881 68
4883 34
4884 16
4886 51
fn=runtime.newproc1
1040 17
4892 85
4893 85
4897 17
4898 17
4899 34
4900 34
4901 51
4902 68
4903 34
4905 68
4909 34
4915 34
4926 68
4927 17
4928 17
4929 51
4930 34
4931 85
4932 68
4933 34
4934 102
4935 51
4936 85
4937 16
4940 4
4943 2
4953 49
4954 34
4955 1
4957 34
4960 51
4961 68
4962 68
4966 4
4967 8
4968 8
4970 51
4971 17
4972 17
4973 17
4988 17
4990 51
fn=runtime.newstack
4082 198
fn=runtime.park_m
3931 372
3932 248
4007 620
4008 248
4010 372
4014 372
4015 124
4020 124
4022 496
4023 620
4024 730
4025 110
4026 124
4036 124
fn=runtime.parkunlock_c
4001 535
4002 107
4003 428
fn=runtime.pidleget
6469 1222
6470 17108
6471 6110
6476 1222
6477 18330
6478 7332
6559 7200
6562 2880
6563 2880
6565 2444
6566 261
6568 3927
6569 3666
6570 2444
6571 1222
6572 7332
6574 9644
fn=runtime.pidlegetSpinning
6587 1750
6590 350
6591 700
6595 107
6596 428
6599 729
fn=runtime.pidleput
6469 1233
6470 19728
6471 6165
6532 6165
6535 1233
6538 2466
6539 45
6541 1278
6542 4932
6543 2466
6544 1233
6545 1233
6546 1233
6549 3699
6609 2466
6610 1233
6611 1233
6612 1233
6613 3699
6614 4932
fn=runtime.preemptall
6182 1465
6184 18449
6185 7032
6188 1311
6192 2483
fn=runtime.preemptone
6205 2650
6206 530
6207 2638
6208 1100
6210 255
6211 820
6212 400
6215 155
6221 155
6224 310
6225 155
6226 155
6229 620
fn=runtime.procresize
5591 594
5595 297
5596 1782
5599 99
5600 99
5606 99
5607 297
5608 686
5610 100
5612 792
5615 297
5618 1
5619 4
5622 6
5625 6
5626 8
5629 6
5633 2
5636 6
5638 6
5640 6
5642 1
5646 361
5647 108
5648 24
5649 24
5651 72
5652 84
5655 99
5656 592
5658 98
5659 490
5678 3
5679 5
5680 1
5681 2
5682 1
5683 1
5684 1
5691 99
5694 507
5701 297
5704 13
5710 6336
5711 8316
5712 7029
5713 99
5715 1089
5716 1089
5717 4369
5724 99
5726 396
5727 4457
5729 3
5731 10299
6609 1089
6610 1089
6611 1089
6612 1089
6613 4356
6614 4356
7085 1188
7086 198
7087 6241
7088 5544
7089 3980
7116 15444
7117 9504
fn=runtime.ready
952 280
953 56
956 56
957 336
963 168
964 168
965 56
969 336
970 56
971 56
972 168
1040 56
fn=runtime.readyWithTime
412 72
fn=runtime.readyWithTime.goready.func1
412 42
413 18
414 18
fn=runtime.reentersyscall
4315 213
4316 213
4317 71
4321 142
4327 71
4328 71
4331 71
4332 213
4333 142
4334 213
4340 497
4347 71
4358 71
4363 355
4369 284
4370 142
4371 71
4372 142
4373 142
4374 142
4375 71
4380 142
4381 213
fn=runtime.releaseSudog
456 21
457 21
460 14
463 14
466 14
469 14
472 14
476 14
479 7
480 7
481 21
501 74
502 7
503 21
fn=runtime.releasep
5791 1405
5792 281
5793 281
5797 1124
fn=runtime.releasepNoTrace
5801 1405
5802 281
5804 1405
5807 281
5808 1686
5812 281
5813 281
5814 281
5815 843
fn=runtime.resetspinning
3737 650
3738 130
3739 260
3742 130
3743 130
3744 260
3750 130
3751 390
fn=runtime.resumeG
1040 833
fn=runtime.retake
6104 955
6108 191
6112 12894
6113 4584
6114 4584
6120 2384
6122 9168
6124 288
6125 1152
6126 107
6127 326
6128 5643
6129 184
6135 4676
6137 96
6138 28
6139 3
6140 3
6141 3
6146 39
6150 5
6155 15
6156 10
6157 35
6158 5
6163 10
6164 5
6165 15
6169 10
6170 5
6173 191
6174 6023
6609 5
6610 5
6611 5
6612 5
6613 20
6614 15
fn=runtime.runSafePointFn
2020 895
2021 358
2025 1253
2028 716
2029 179
2030 537
2031 358
2032 290
2034 179
2035 537
fn=runtime.runqgrab
6813 6780
6814 8246
6815 1380
6816 1368
6817 1368
6818 4104
6819 2736
6820 1340
6822 1029
6823 112
6835 168
6843 100
6846 132
6847 176
6850 5136
6852 84
6853 28
6855 168
6856 84
6857 196
6859 168
6860 112
fn=runtime.runqput
6635 365
6640 223
6642 73
6643 146
6646 146
6647 207
6650 4
6654 8
6655 4
6656 20
6657 16
6658 8
6659 12
fn=runtime.runqputbatch
6713 120
6714 24
6715 48
6717 168
6718 24
6719 24
6720 24
6721 24
6723 24
6735 48
6736 24
6741 72
6896 120
6937 24
6938 48
6939 48
6940 48
6941 48
fn=runtime.runqsteal
6868 6780
6869 2712
6870 8136
6871 4068
6872 5136
6875 432
6876 144
6877 288
fn=runtime.save
4254 285
4255 95
4257 475
4266 95
4267 95
4268 95
4273 190
4276 285
fn=runtime.saveAncestors
4996 102
4998 51
4999 68
fn=runtime.scanstack
1040 1666
fn=runtime.schedEnableUser
6325 245
6326 49
6327 294
6328 49
6329 147
fn=runtime.schedinit
693 1
695 1
701 2
702 2
703 2
750 5
762 1
763 1
772 1
777 1
782 2
783 1
784 1
785 1
786 1
788 1
789 1
790 1
791 5
792 1
793 2
794 1
795 1
797 4
798 4
800 1
801 1
802 1
803 1
804 1
805 1
809 4
810 2
811 1
817 2
818 1
821 1
822 3
823 2
824 10
827 5
830 1
835 2
840 2
845 3
fn=runtime.schedule
3839 1145
3840 458
3842 687
3846 458
3847 1
3848 5
3853 456
3858 362
3859 458
3864 476
3868 1259
3870 450
3885 675
3886 130
3889 1350
3908 225
3909 3
3911 583
3914 1
3915 1
3918 357
fn=runtime.semacquire1
408 42
fn=runtime.send
412 11
fn=runtime.send.goready.func1
412 7
413 3
414 3
fn=runtime.shrinkstack
1040 833
fn=runtime.startTheWorldWithSema
1284 392
1554 490
1557 98
1558 392
1559 392
1560 196
1561 98
1563 98
1565 98
1566 294
1570 490
1571 98
1572 98
1573 51
1574 102
1576 98
1578 196
1580 196
1598 294
1599 49
1601 441
1602 98
1603 392
1607 98
1608 98
1616 98
1618 98
1620 392
fn=runtime.startlockedm
3041 5
3042 1
3043 2
3046 2
3050 2
3051 1
3052 1
3053 4
3054 1
3055 3
fn=runtime.startm
2809 1310
2826 262
2827 2524
2828 238
2830 762
2846 262
2847 262
2862 8
2863 4
2866 4
2870 44
2877 4
2878 12
2880 258
2881 234
2883 750
2886 516
2889 950
2893 475
2894 262
2895 774
2898 258
2899 774
6380 262
6381 782
6382 516
6383 258
6609 258
6610 451
6611 217
6612 217
6613 868
6614 651
fn=runtime.stealWork
3544 1125
3545 450
3550 3654
3551 14044
3553 148121
3554 9165
3556 88
3558 55250
3559 20642
3576 37304
3577 1304
3579 748
3582 326
3591 8
3599 25199
3600 11428
3601 12215
3610 994
6462 30759
6464 63372
6749 6
6753 8
6758 2
6759 2
6760 4
7096 807
7097 4035
7098 8070
7103 19778
7107 18164
7108 63574
7112 17553
fn=runtime.stopTheWorldWithSema
1284 392
1449 588
1450 98
1451 98
1455 98
1459 294
1463 98
1464 98
1465 196
1466 98
1467 98
1469 392
1470 98
1472 294
1473 5488
1474 1176
1475 3528
1478 3528
1481 98
1484 98
1489 98
1490 98
1491 2012
1492 2110
1495 957
1496 957
1498 392
1499 98
1502 196
1505 564
1506 72
1509 22
1513 268
1514 98
1515 294
1522 196
1525 5488
1526 1176
1531 196
1539 5096
1545 490
fn=runtime.stoplockedm
1040 1
1760 1
1761 4
1762 3
3013 5
3014 2
3016 7
3019 2
3021 1
3022 1
3024 2
3026 1
3027 3
3028 4
3033 3
3034 3
3035 3
fn=runtime.stopm
1760 262
1761 1048
1762 774
2766 1310
2767 524
2769 786
2772 524
2775 786
2779 262
2780 786
2781 262
2782 262
2783 1032
2784 774
2785 774
fn=runtime.suspendG
1040 1666
fn=runtime.sysmon
5946 5
5947 1
5948 1
5949 1
5950 1
5957 1354
5959 186
5960 1024
5962 570
5965 1536
5982 192
5983 1533
5984 67
5985 356
5987 62
5988 256
5989 54
5990 54
5993 270
5994 216
5997 54
6001 267
6005 53
6006 53
6007 53
6009 159
6014 53
6017 191
6020 191
6023 764
6027 191
6028 1005
6029 56
6030 224
6031 56
6065 382
6067 124
6071 1135
6074 843
6077 1528
6078 1
6079 1
6080 1
6081 1
6082 2
6083 1
6085 1529
6089 191
6962 56
6967 1
6968 1
fn=runtime.unlockOSThread
5220 5
5223 1
5224 1
5251 3
5252 2
5253 2
5256 3
5257 1
5258 3
fn=runtime.updateTimerPMask
6476 1195
6477 16730
6478 7170
6506 6165
6507 4894
6508 114
6514 2390
6515 2390
6516 3585
6518 1195
6519 3585
fn=runtime.wakeNetPoller
3718 96
3719 48
3724 2
3725 8
3726 2
3732 22
3735 48
fn=runtime.wakep
2975 2125
2978 1175
2979 300
2987 325
2990 325
2991 1194
2992 650
2993 212
2996 106
2997 106
2998 318
3004 219
3006 876
3008 219
3009 657
fn=runtime.wirep
5763 1059
5764 706
5766 1412
5773 1412
5785 1059
5786 353
5787 353
5788 1059
fn=sync.runtime_procPin
7004 275
7007 275
7008 550
7019 275
7020 275
fn=sync.runtime_procUnpin
7013 275
7014 275
7025 275
7026 275
7027 275
fl=/usr/lib/go-1.22/src/runtime/rand.go
fn=runtime.(*gcControllerState).enlistWorker
179 978
186 4890
187 3912
188 978
224 2934
fn=runtime.(*lockTimer).begin
179 138
186 276
187 276
188 69
fn=runtime.(*semaRoot).queue
179 5
186 15
187 20
188 5
fn=runtime.bootstrapRand
92 200
93 40
94 80
98 40
99 40
100 160
fn=runtime.bootstrapRandReseed
108 30
109 6
110 12
113 18
114 6
115 18
fn=runtime.fastexprand
179 1
186 4
187 4
188 1
224 3
fn=runtime.mrandinit
150 30
151 18
152 120
153 72
155 6
156 6
157 18
158 18
fn=runtime.newproc1
179 17
186 68
187 51
188 17
fn=runtime.pcvalue
179 1465
186 5860
187 4395
188 1465
224 4395
fn=runtime.rand
127 27
132 18
133 36
134 9
139 9
141 27
fn=runtime.randinit
37 5
38 1
39 2
44 5
45 83
46 160
48 6
49 5
59 10
60 2
61 1
62 1
63 3
fn=runtime.stealWork
179 807
186 3228
187 3228
188 1614
fl=/usr/lib/go-1.22/src/runtime/retry.go
fn=runtime.retryOnEAGAIN
14 25
15 30
16 20
17 10
18 15
fl=/usr/lib/go-1.22/src/runtime/rt0_linux_amd64.s
fn=_rt0_amd64_linux
8 1
fl=/usr/lib/go-1.22/src/runtime/runtime.go
fn=os.runtime_args
127 40
fn=runtime.(*ticksType).init
30 5
31 1
32 2
33 6
34 1
35 4
fn=syscall.runtime_envs
121 40
fl=/usr/lib/go-1.22/src/runtime/runtime1.go
fn=runtime.(*gcCPULimiterState).updateLocked
581 674
582 1011
588 5392
589 1346
591 33
fn=runtime.(*mheap).reclaim
581 27444
582 27444
588 44857
589 27444
fn=runtime.(*rwmutex).rlock
580 10
581 10
582 20
fn=runtime.(*rwmutex).runlock
588 30
589 20
fn=runtime.acquireSudog
580 7
581 7
582 10
588 24
589 32
fn=runtime.addspecial
581 8
582 8
588 16
589 16
fn=runtime.allocm
581 10
582 10
588 15
589 10
fn=runtime.args
66 5
67 1
68 3
69 1
70 3
fn=runtime.check
142 5
148 1
152 3
153 3
156 1
214 69
218 1
219 1
220 7
223 2
227 1
228 6
231 2
235 1
236 7
239 2
243 1
244 3
245 8
249 1
250 2
251 9
255 1
256 4
259 2
263 1
264 5
267 2
271 1
272 4
279 1
280 5
287 1
289 2
293 5
296 3
556 96
557 155
558 6
561 12
564 2
571 2
fn=runtime.deltimer
581 34
582 17
588 68
589 34
fn=runtime.forEachPInternal
580 296
581 148
582 444
588 592
589 494
fn=runtime.gcBgMarkWorker
581 30
582 15
588 9
589 12
fn=runtime.gcBgMarkWorker.func1
588 36
589 48
fn=runtime.gcMarkTermination
581 98
582 98
588 196
589 196
591 14
fn=runtime.gcStart
580 120
581 158
582 218
588 336
589 420
591 2
fn=runtime.getGodebugEarly
63 437
fn=runtime.goargs
63 4
72 5
76 11
77 8
78 13
80 3
fn=runtime.goenvs_unix
63 375
82 6
87 254
88 62
91 12
92 376
93 1116
95 3
fn=runtime.gopark
580 124
581 124
582 124
588 372
589 254
fn=runtime.injectglist.func1
581 50
582 50
588 100
589 50
fn=runtime.mallocgc
581 190002
582 190106
588 285111
589 379796
591 11
fn=runtime.modtimer
581 50
582 25
588 123
589 50
fn=runtime.newm
580 5
581 5
582 10
588 15
589 12
fn=runtime.newproc1
581 34
582 51
588 84
589 85
fn=runtime.parsedebugvars
373 5
375 1
376 1
377 1
387 1
389 1
391 5
393 2
394 7
395 1
398 110
399 78
410 4
413 4
415 5
417 5
418 2
419 3
fn=runtime.parsegodebug
447 14
448 8
504 4
507 6
fn=runtime.pcvalue
581 12724
582 7827
588 19086
589 24800
591 1465
fn=runtime.persistentalloc1
581 456
582 456
588 704
589 456
fn=runtime.ready
581 112
582 112
588 224
589 122
fn=runtime.releaseSudog
581 14
582 14
588 21
589 28
fn=runtime.removespecial
581 2
582 2
588 4
589 4
fn=runtime.startTheWorldWithSema
580 98
581 98
582 196
588 392
589 196
fn=runtime.startm
580 262
581 262
582 524
588 1778
589 526
fn=runtime.sysargs
63 189
fn=runtime.testAtomic64
105 5
106 1
107 1
108 8
111 2
114 1
115 5
118 5
121 4
124 2
125 4
128 7
131 3
134 4
137 4
140 3
fn=runtime.wakep
581 650
582 650
588 1300
589 996
fn=runtime/debug.SetTraceback
510 6
512 1
515 3
516 1
517 2
538 4
542 1
544 2
545 3
fl=/usr/lib/go-1.22/src/runtime/runtime2.go
fn=runtime.(*gcControllerState).findRunnableGCWorker
266 3
fn=runtime.(*mheap).allocMSpanLocked
293 2556
fn=runtime.(*mheap).allocSpan
293 94628
fn=runtime.(*scavengerState).wake
269 48
fn=runtime.(*unwinder).initAt
278 834
fn=runtime.(*unwinder).next
266 2055
fn=runtime.acquireSudog
293 3
fn=runtime.casgstatus
1182 358
1183 286
1184 143
fn=runtime.doaddtimer
296 50
fn=runtime.exitsyscall
293 83
fn=runtime.findRunnable
266 50
273 75
293 387
fn=runtime.forEachPInternal
293 148
fn=runtime.gcAssistAlloc1
293 236
fn=runtime.gcBgMarkWorker
269 12
293 3
313 24
fn=runtime.gcDrain
293 12
fn=runtime.globrunqget
266 125
fn=runtime.goschedImpl
269 492
287 100
313 100
321 100
fn=runtime.injectglist
266 221
269 155
293 2
fn=runtime.main
269 1
313 1
fn=runtime.modtimer
293 24
fn=runtime.mput
313 262
fn=runtime.newm
296 5
fn=runtime.newproc1
293 17
fn=runtime.newstack
266 173
fn=runtime.park_m
269 124
287 124
313 124
321 124
fn=runtime.pidleget
293 1222
fn=runtime.pidleput
296 2466
fn=runtime.procresize
293 196
fn=runtime.puintptr.ptr
293 89540
fn=runtime.reentersyscall
296 71
fn=runtime.releaseSudog
293 7
fn=runtime.runqgrab
273 364
fn=runtime.runqput
269 4
273 292
fn=runtime.runqputbatch
269 24
fn=runtime.startlockedm
296 1
310 1
fn=runtime.startm
296 258
310 234
fn=runtime.stealWork
293 1707
fn=runtime.sysmon
269 1
fn=runtime.wirep
296 353
313 353
fl=/usr/lib/go-1.22/src/runtime/rwmutex.go
fn=runtime.(*rwmutex).rlock
70 50
75 10
77 20
80 20
100 30
fn=runtime.(*rwmutex).runlock
103 50
104 40
120 10
121 30
fn=runtime.schedinit
61 2
fl=/usr/lib/go-1.22/src/runtime/security_unix.go
fn=runtime.schedinit
12 2
fl=/usr/lib/go-1.22/src/runtime/select.go
fn=runtime.init
25 2
26 5
fl=/usr/lib/go-1.22/src/runtime/sema.go
fn=internal/poll.runtime_Semrelease
91 5
92 1
93 3
172 3
fn=runtime.(*semaRoot).dequeue
365 30
366 12
368 30
369 18
382 24
385 23
387 7
388 2
389 8
390 8
391 2
394 8
395 2
398 2
401 7
403 3
404 2
410 6
411 1
412 2
413 7
414 3
417 30
425 20
432 21
434 10
436 30
437 12
438 12
439 6
440 6
441 36
fn=runtime.(*semaRoot).queue
267 30
268 48
269 15
270 12
271 6
272 6
275 18
276 34
277 3
279 1
309 3
310 7
314 7
315 3
316 4
317 2
320 3
341 10
342 23
343 16
346 20
356 15
fn=runtime.gcMarkDone
111 1005
172 408
fn=runtime.gcMarkTermination
172 392
fn=runtime.gcStart
111 987
172 445
fn=runtime.readyWithTime
95 38
96 12
99 6
100 18
fn=runtime.semacquire1
57 90
114 1495
115 299
116 1525
121 299
122 879
131 24
132 6
134 6
136 6
137 24
139 6
141 12
148 12
150 6
152 6
159 30
160 12
161 48
165 24
166 12
168 6
169 18
255 323
256 323
257 628
260 1806
fn=runtime.semrelease1
57 3606
175 1870
176 300
177 600
182 930
183 882
187 12
188 12
194 36
195 24
196 6
198 6
199 6
200 6
201 12
225 12
228 6
231 18
232 18
252 18
fn=sync.runtime_notifyListCheck
665 5
666 2
670 3
fl=/usr/lib/go-1.22/src/runtime/signal_amd64.go
fn=runtime.doSigPreempt
41 4
44 4
fn=runtime.sighandler
41 127
fl=/usr/lib/go-1.22/src/runtime/signal_linux_amd64.go
fn=runtime.doSigPreempt
20 8
30 4
42 4
fn=runtime.sighandler
20 254
42 127
48 762
fl=/usr/lib/go-1.22/src/runtime/signal_unix.go
fn=runtime.adjustSignalStack
555 508
556 254
557 889
558 508
fn=runtime.doSigPreempt
341 635
344 254
345 24
352 385
353 381
358 381
fn=runtime.init
1200 2
1201 2
1206 2
1226 1
fn=runtime.initsig
114 3
115 3
117 1
122 6
123 1
126 432
127 125
128 455
134 348
136 174
139 6
144 2
147 112
148 168
150 3
159 232
160 8
165 234
173 287
179 330
fn=runtime.minitSignalMask
1297 30
1298 24
1299 1188
1300 318
1301 108
1304 6
1305 24
1336 2340
1337 780
1340 660
1343 1272
1346 318
fn=runtime.minitSignalStack
1276 30
1277 12
1278 12
1279 36
1280 18
1281 24
1282 12
1287 18
fn=runtime.minitSignals
1261 24
1262 6
1263 6
1264 12
fn=runtime.preemptone
375 155
385 381
fn=runtime.schedinit
1183 1
fn=runtime.sigfwdgo
1111 381
1112 254
1115 508
1116 381
1119 1016
1144 254
1145 508
fn=runtime.sighandler
619 635
622 127
623 127
624 381
636 1524
638 254
647 254
651 254
655 254
664 635
666 381
673 381
674 635
676 762
685 254
690 254
708 381
709 508
714 254
718 1270
726 254
727 381
fn=runtime.signalstack
1397 18
1398 30
1399 6
1400 36
1401 18
fn=runtime.sigtrampgo
417 127
431 381
432 889
435 635
436 127
437 635
438 1143
476 635
479 381
480 1143
481 127
485 381
490 508
491 635
492 127
495 381
fl=/usr/lib/go-1.22/src/runtime/sigqueue.go
fn=runtime.sighandler
273 1270
274 254
fn=runtime.sigsend
71 635
73 254
77 127
80 1143
81 127
82 508
fl=/usr/lib/go-1.22/src/runtime/slice.go
fn=runtime.growslice
155 410
156 246
168 407
172 246
178 118
186 246
188 164
191 45
192 135
193 45
194 74
195 31
196 62
197 93
198 93
199 93
200 6
204 6
208 6
209 18
210 18
211 24
212 6
213 18
236 410
241 82
242 240
247 367
250 221
251 198
261 342
263 806
269 82
270 187
275 69
321 18
fn=runtime.makeslice
92 472730
93 378184
94 850914
107 567276
fn=runtime.makeslicecopy
38 15
40 12
42 12
43 21
46 9
56 6
57 12
58 12
59 12
63 3
64 3
87 15
89 12
fl=/usr/lib/go-1.22/src/runtime/stack.go
fn=runtime.adjustctxt
567 1
571 6
572 3
732 1
745 2
755 1
fn=runtime.adjustdefers
571 2
761 1
762 5
767 1
fn=runtime.adjustframe
567 38
571 72
572 39
646 72
647 60
651 48
657 60
675 10
678 96
681 36
682 12
683 48
687 24
691 40
696 48
697 83
698 27
699 20
700 9
701 18
704 18
705 18
711 9
712 9
714 27
719 161
720 290
721 14
724 18
729 36
1267 9
1268 45
1271 9
1276 9
1278 27
1279 54
1287 18
fn=runtime.adjustpointers
597 55
598 11
599 11
600 11
601 22
607 56
608 119
614 42
615 58
616 8
617 16
618 14
619 8
620 16
621 26
628 32
632 1
638 4
643 33
fn=runtime.check
944 97
945 11
fn=runtime.copystack
567 2
571 2
772 2
778 4
854 6
855 5
858 4
859 2
862 4
867 8
870 5
871 2
879 2
880 4
881 3
885 3
886 4
893 1
910 6
915 3
916 3
917 1
918 3
923 4
924 2
925 3
926 2
929 6
930 38
931 36
935 2
938 3
939 3
fn=runtime.freeStackSpans
1218 294
1220 1519
1221 980
1222 588
1223 1810
1224 146
1225 292
1233 196
1237 49
1238 8673
1239 18865
1247 49
1248 147
fn=runtime.gcComputeStartingStackSize
944 4753
945 539
1306 98
1321 2744
1322 1764
1323 1176
1325 588
1328 98
1332 196
1335 98
1338 98
1342 245
1343 49
fn=runtime.gostartcallfn
1127 68
1129 34
1130 34
1134 17
1135 34
fn=runtime.malg
944 3375
945 347
fn=runtime.newstack
962 1038
963 346
965 519
968 692
977 519
998 1384
999 346
1000 346
1001 346
1002 346
1007 346
1021 273
1022 173
1023 271
1026 219
1027 292
1031 300
1034 100
1037 300
1039 200
1044 200
1050 100
1051 396
1054 198
1058 198
1061 1
1062 1
1065 199
1070 99
1074 3
1075 5
1080 4
1081 2
1082 1
1083 3
1084 7
1089 4
1096 9
1102 1
1108 4
1112 3
1116 5
1117 4
fn=runtime.scanstack
1153 5827
1263 738
1267 246
1268 492
1271 246
1276 492
1278 738
1279 1476
1287 492
fn=runtime.schedinit
171 17
172 8
175 107
176 70
fn=runtime.shrinkstack
1153 5831
1160 4165
1161 2499
1164 1666
1168 9
1173 1666
1179 2649
1183 1666
1186 2499
1187 2499
1190 1764
1193 1225
1194 490
1197 490
1198 588
1206 343
1207 147
fn=runtime.stackalloc
184 42
185 12
186 12
336 150
340 30
341 198
344 90
351 60
364 60
367 110
368 19
369 38
372 118
377 7
378 3
379 1
381 33
382 149
383 46
384 20
385 30
387 66
388 56
390 25
393 48
394 6
397 6
398 54
402 6
406 24
408 24
409 12
413 12
415 6
430 259
fn=runtime.stackcache_clear
312 2940
316 19404
317 14112
318 16464
319 9465
320 38
321 38
324 7094
326 2352
328 1764
fn=runtime.stackcacherefill
271 50
280 100
281 153
282 82
283 82
285 205
287 10
288 172
289 20
290 30
fn=runtime.stackfree
439 5
441 1
442 3
443 5
453 3
467 2
470 3
475 6
480 1
481 8
484 2
485 1
486 2
511 3
fn=runtime.stackpoolalloc
193 210
194 264
195 84
197 84
199 36
200 12
203 12
206 24
210 30
211 202
212 46
213 92
214 46
216 24
218 53
219 84
222 84
223 126
224 168
226 21
228 173
fn=runtime.stackpoolfree
232 95
233 19
234 95
237 57
239 20
241 40
242 19
243 57
244 95
260 2
265 57
fl=/usr/lib/go-1.22/src/runtime/stkframe.go
fn=runtime.(*stkframe).argMapInternal
94 14445
95 2889
96 11556
97 14445
98 17334
fn=runtime.(*stkframe).getStackMap
157 17334
158 8667
159 8667
164 11556
166 8667
171 5778
172 14445
174 5778
182 10646
190 2889
192 989
193 9895
198 8747
199 3956
204 2969
215 8667
216 8022
219 1122
220 5610
224 14277
226 5778
229 3425
230 59
232 1063
237 2889
245 791
246 5778
247 791
248 1582
250 11315
259 36435
fn=runtime.stkobjinit
264 6
265 10
266 1
267 4
272 2
274 3
275 5
280 2
283 4
284 2
286 1
287 2
289 3
fl=/usr/lib/go-1.22/src/runtime/string.go
fn=runtime.(*moduledata).funcName
565 64
566 16
fn=runtime.atoi64
360 3
361 6
362 6
366 6
372 26
373 7
374 21
377 21
381 21
382 14
383 14
390 4
393 4
397 7
398 1
399 2
402 3
fn=runtime.findnull
508 423
509 282
536 705
538 141
539 858
541 1287
542 848
545 6
546 6
fn=runtime.getGodebugEarly
345 370
fn=runtime.getHugePageSize
408 4
fn=runtime.goargs
565 6
fn=runtime.gostring
267 248
268 310
318 310
319 186
320 310
323 62
324 186
325 310
fn=runtime.isAsyncSafePoint
345 6
fn=runtime.isSystemGoroutine
345 90
fn=runtime.readGOGC
417 5
fn=runtime.schedinit
417 6
fn=runtime.slicebytetostring
81 315
82 504
100 126
109 252
112 252
114 252
115 567
fl=/usr/lib/go-1.22/src/runtime/stubs.go
fn=runtime.(*itabTableType).add
16 22
fn=runtime.(*linearAlloc).alloc
345 48
fn=runtime.(*mcache).allocLarge
371 172942
fn=runtime.(*mheap).grow
345 582
fn=runtime.(*mheap).sysAlloc
345 24
fn=runtime.(*pageAlloc).allocToCache
352 15
fn=runtime.(*pageAlloc).grow
345 372
352 186
fn=runtime.(*pageAlloc).sysGrow
16 930
345 1860
352 1395
fn=runtime.(*pageAlloc).sysGrow.func1
345 1850
352 2775
fn=runtime.(*pageAlloc).sysGrow.func2
16 920
345 1380
352 1380
fn=runtime.(*pageAlloc).sysInit
345 25
fn=runtime.(*pallocData).findScavengeCandidate
345 740
352 28
fn=runtime.(*pollCache).alloc
16 16
fn=runtime.(*scavengeIndex).sysGrow
345 558
352 558
fn=runtime.(*stkframe).getStackMap
16 1582
fn=runtime.(*sweepLocked).sweep
359 1312781
fn=runtime.SetFinalizer
345 28
fn=runtime.adjustpointers
16 8
fn=runtime.chanrecv
16 1
fn=runtime.chansend
16 1
fn=runtime.doInit1
16 31
fn=runtime.findfunc
16 7742
fn=runtime.gcMarkRootPrepare
359 196
fn=runtime.getGodebugEarly
16 125
fn=runtime.goargs
16 1
fn=runtime.goenvs_unix
16 125
fn=runtime.growslice
16 48
359 176
fn=runtime.makechan
16 1
fn=runtime.makeslicecopy
16 3
fn=runtime.mallocgc
16 3922
345 674
359 16786
371 8292
fn=runtime.mapassign_faststr
16 54
fn=runtime.markrootBlock
16 147
fn=runtime.pcdatavalue
16 4012
fn=runtime.pcdatavalue2
16 4
fn=runtime.persistentalloc1
345 1193
fn=runtime.stkobjinit
345 2
fn=runtime.sysargs
16 2
fl=/usr/lib/go-1.22/src/runtime/symtab.go
fn=runtime.(*moduledata).funcName
638 80
639 32
642 192
fn=runtime.(*moduledata).textAddr
590 28734
591 9578
592 28734
593 28734
606 38312
fn=runtime.(*stkframe).getStackMap
762 8667
1088 22838
1091 16848
1092 17970
1093 5990
1097 11980
1100 11980
1102 5990
1159 8208
fn=runtime.(*unwinder).initAt
748 834
fn=runtime.(*unwinder).next
748 2055
fn=runtime.(*unwinder).resolveInternal
1032 14445
fn=runtime.adjustpointers
748 8
fn=runtime.findfunc
616 11613
617 11613
734 15484
735 19355
771 11613
772 3871
773 7742
778 3871
783 11613
784 7742
785 7742
787 7742
788 19355
791 76200
795 11613
796 34839
fn=runtime.funcMaxSPDelta
762 127
1041 15
1043 54
1044 3
1045 3
1047 3
1049 328
1050 23
1051 55
1053 80
fn=runtime.gcMarkRootPrepare
426 147
427 196
430 196
fn=runtime.isAbortPC
748 127
fn=runtime.isAsyncSafePoint
748 3
810 1
813 1
817 2
820 3
1088 4
1091 3
1092 3
1093 1
1097 2
1100 2
1102 1
fn=runtime.isSystemGoroutine
748 17
980 75
fn=runtime.itabsinit
426 1
427 2
430 2
fn=runtime.markroot
426 147
427 294
430 294
fn=runtime.moduledataverify1
524 6
526 1
527 10
528 8
536 6
537 4770
539 14301
557 6
558 12
559 10
564 5
570 3
fn=runtime.modulesinit
451 5
452 4
453 7
454 2
457 23
458 4
459 3
460 7
461 3
462 7
463 3
476 7
477 2
478 1
479 6
484 1
485 3
fn=runtime.newInlineUnwinder
1088 3
1091 2
1092 3
1093 1
1097 2
1100 2
1102 1
fn=runtime.newstack
748 1
fn=runtime.pcdatavalue
1058 6018
1061 14445
1062 5778
1063 3532
1065 4012
1066 6018
fn=runtime.pcdatavalue2
1058 6
1078 10
1079 4
1082 10
fn=runtime.pcvalue
748 1465
762 31840
842 16156
846 29382
851 17119
860 4897
862 4897
863 4897
868 9794
869 19588
870 76184
876 127810
877 116324
878 6864
883 3432
884 3432
885 10296
894 1465
895 1465
898 1465
906 23440
907 1465
909 1465
910 1465
912 86867
913 5196
916 20784
929 1465
930 1465
931 2930
932 2930
933 7325
934 1465
935 14650
936 10255
939 1465
943 1465
944 1465
947 14787
fn=runtime.scanframeworker
748 5754
fn=runtime.schedinit
517 8
518 1
fn=runtime.shrinkstack
748 833
fn=runtime.step
1106 20876
1109 22592
1110 20876
1111 21
1114 10432
1115 3432
1117 38228
1118 51818
1120 15648
1122 10432
1123 4600
1125 50394
1126 5216
1127 20864
1133 10432
1134 14348
1135 4016
1136 20080
1137 8032
1140 2008
fl=/usr/lib/go-1.22/src/runtime/symtabinl.go
fn=runtime.isAsyncSafePoint
94 2
95 1
fn=runtime.newInlineUnwinder
54 5
56 2
57 6
fl=/usr/lib/go-1.22/src/runtime/sys_linux_amd64.s
fn=runtime.clone.abi0
563 5
564 5
565 5
566 5
567 5
570 5
571 5
572 5
573 5
574 5
575 5
576 5
577 5
582 5
584 5
586 5
587 5
590 10
591 10
592 5
593 5
596 5
599 5
600 5
601 5
602 5
605 5
606 5
607 5
611 5
612 5
613 5
614 5
618 5
fn=runtime.closefd.abi0
84 1
85 1
86 1
87 1
88 1
90 1
91 1
fn=runtime.exit.abi0
52 1
53 1
54 1
fn=runtime.futex.abi0
550 1315
551 1315
552 1315
553 1315
554 1315
555 1315
556 1315
557 1353
558 1310
559 1310
fn=runtime.getpid.abi0
166 127
167 127
168 127
169 127
fn=runtime.gettid.abi0
138 6
139 6
140 6
141 6
fn=runtime.madvise.abi0
539 77
540 77
541 77
542 77
543 78
544 77
545 77
fn=runtime.nanotime1.abi0
223 8289
231 2763
233 2763
238 2763
239 2763
240 2763
241 2763
243 2763
244 2763
245 2763
246 2763
248 2763
249 2763
251 461
252 461
255 2763
256 2763
258 2763
259 2763
260 2763
261 2763
262 2763
265 2763
266 2763
267 2763
273 2763
274 2763
275 2763
276 2763
279 2763
280 2763
281 2763
282 8289
284 2763
285 2763
286 2763
fn=runtime.open.abi0
71 1
72 1
73 1
74 1
75 1
76 1
77 1
78 1
80 1
81 1
fn=runtime.osyield.abi0
654 71
655 81
656 71
fn=runtime.pipe2.abi0
113 1
114 1
115 1
116 1
117 1
118 1
fn=runtime.read.abi0
103 2
104 2
105 2
106 2
107 2
108 2
109 2
fn=runtime.rt_sigaction.abi0
301 114
302 114
303 114
304 114
305 114
306 114
307 114
308 114
fn=runtime.rtsigprocmask.abi0
289 17
290 17
291 17
292 17
293 17
294 17
295 17
296 17
298 17
fn=runtime.sched_getaffinity.abi0
659 1
660 1
661 1
662 1
663 1
664 1
665 1
fn=runtime.settls.abi0
637 3
642 1
644 1
645 1
646 1
647 1
648 1
649 1
651 3
fn=runtime.sigaltstack.abi0
627 12
628 12
629 12
630 12
631 12
632 12
634 12
fn=runtime.sigreturn__sigaction.abi0
471 127
472 127
fn=runtime.sigtramp.abi0
337 1016
341 127
342 127
346 127
349 127
350 127
351 127
352 127
354 127
356 889
357 127
fn=runtime.sysMmap.abi0
476 140
477 140
478 140
479 140
480 140
481 140
483 140
484 140
485 140
486 140
493 140
494 140
495 140
fn=runtime.sysMunmap.abi0
516 1
517 1
518 1
519 1
520 1
521 1
523 1
fn=runtime.tgkill.abi0
172 127
173 127
174 127
175 127
176 131
177 127
fn=runtime.usleep.abi0
120 702
121 234
122 234
123 234
124 234
125 234
126 234
127 234
128 234
131 234
132 234
133 234
134 234
135 702
fn=runtime.write1.abi0
94 1
95 1
96 1
97 1
98 1
99 1
100 1
fl=/usr/lib/go-1.22/src/runtime/sys_x86.go
fn=runtime.gostartcallfn
17 17
18 17
19 51
20 17
21 17
22 51
fl=/usr/lib/go-1.22/src/runtime/tagptr_64bit.go
fn=runtime.(*gcControllerState).findRunnableGCWorker
75 9
fn=runtime.(*lfstack).push
67 17670
75 10602
fn=runtime.(*spanSetBlockAlloc).alloc
75 4629
fn=runtime.getempty
75 2964
fn=runtime.lfnodeValidate
67 3136
75 1568
fn=runtime.netpollopen
67 3
fn=runtime.trygetfull
75 591
fl=/usr/lib/go-1.22/src/runtime/time.go
fn=runtime.(*scavengerState).sleep
223 50
235 25
555 275
fn=runtime.adjusttimers
669 125
675 25
676 50
680 75
fn=runtime.checkTimersNoP
758 264
759 264
760 673
fn=runtime.deltimer
314 125
315 67
316 150
320 17
321 17
325 17
326 17
329 17
330 17
332 68
364 32
fn=runtime.doaddtimer
290 125
293 100
297 50
300 25
301 103
302 296
303 128
304 175
305 25
307 25
308 75
fn=runtime.dodeltimer0
413 125
414 225
417 25
419 50
420 75
423 231
424 100
425 25
428 25
429 25
430 50
432 25
434 75
1006 50
1007 25
fn=runtime.modtimer
439 175
440 294
443 75
453 150
466 24
470 24
473 24
479 1
480 1
481 2
483 49
499 25
500 170
501 107
502 25
504 50
505 24
506 48
507 72
508 72
509 24
510 24
513 24
514 72
521 1
524 2
530 5
535 1
538 25
541 1
546 125
fn=runtime.runOneTimer
841 40
850 24
851 32
852 16
854 32
868 16
869 8
883 32
885 56
887 8
893 24
fn=runtime.runtimer
774 125
775 100
776 160
777 104
780 130
782 30
784 4
787 16
792 32
793 32
796 16
799 32
800 16
803 16
804 64
805 64
809 1
812 2
813 2
814 3
815 2
fn=runtime.siftupTimer
1070 125
1071 125
1074 75
1075 50
1078 25
1079 75
1087 125
1090 100
fn=runtime.timeSleepUntil
1032 310
1036 62
1037 3472
1038 1488
1044 744
1045 2976
1049 744
1050 3720
1054 62
1056 1783
fl=/usr/lib/go-1.22/src/runtime/time_linux_amd64.s
fn=time.now
14 273
15 91
17 91
22 91
23 91
24 91
25 91
27 91
28 91
29 91
30 91
32 91
33 91
35 91
36 91
39 91
40 91
42 91
43 91
44 91
45 91
46 91
55 91
56 91
57 91
58 91
59 91
61 91
68 91
69 91
70 91
71 91
74 91
75 91
76 273
79 91
80 91
82 91
83 91
84 91
85 91
87 91
fl=/usr/lib/go-1.22/src/runtime/time_nofake.go
fn=runtime.(*gcControllerState).findRunnableGCWorker
19 744
fn=runtime.(*lockTimer).begin
19 20
fn=runtime.(*lockTimer).end
19 20
fn=runtime.(*mheap).allocSpan
19 10
fn=runtime.(*scavengerState).init.func2
19 729
fn=runtime.(*scavengerState).sleep
19 225
fn=runtime.(*ticksType).init
19 4
fn=runtime.casgstatus
19 184
fn=runtime.checkTimers
19 236
fn=runtime.findRunnable
19 85
fn=runtime.forcegchelper
19 4
fn=runtime.gcAssistAlloc1
19 2360
fn=runtime.gcBgMarkWorker
19 30
fn=runtime.gcMarkDone
19 245
fn=runtime.gcMarkTermination
19 490
fn=runtime.gcStart
19 196
fn=runtime.main
19 4
fn=runtime.nanotime
18 129
19 301
fn=runtime.notetsleep_internal
19 1516
fn=runtime.pidleget
19 1044
fn=runtime.pidleput
19 180
fn=runtime.procresize
19 495
fn=runtime.schedinit
19 4
fn=runtime.startTheWorldWithSema
19 245
fn=runtime.stopTheWorldWithSema
19 1470
fn=runtime.sysmon
19 1846
fn=runtime.write
27 3
28 3
31 10
fl=/usr/lib/go-1.22/src/runtime/trace2runtime.go
fn=runtime.(*gcControllerState).findRunnableGCWorker
144 3
173 9
229 6
fn=runtime.(*gcControllerState).resetLive
144 49
173 147
229 49
fn=runtime.(*gcControllerState).update
144 94677
173 284031
229 94677
fn=runtime.(*mcentral).cacheSpan
144 24517
173 73551
176 8206
229 48832
fn=runtime.(*mheap).reclaim
144 27444
173 82332
229 27444
fn=runtime.(*mheap).reclaimChunk
144 1828
173 5484
176 1828
229 1828
fn=runtime.(*sweepLocked).sweep
144 377948
173 566922
229 188974
fn=runtime.acquirep
144 288
173 1152
229 288
fn=runtime.deductSweepCredit
144 150474
173 451422
229 150474
fn=runtime.entersyscallblock_handoff
144 12
173 36
229 12
fn=runtime.execute
144 225
173 675
229 225
fn=runtime.exitsyscall
144 83
173 249
229 249
fn=runtime.exitsyscallfast
144 83
173 249
229 213
fn=runtime.findRunnable
144 387
149 387
fn=runtime.forEachPInternal
144 1776
173 1776
229 1776
fn=runtime.gcAssistAlloc
144 472
173 1416
229 472
fn=runtime.gcControllerCommit
144 49
173 147
176 49
229 49
fn=runtime.gcMarkTermination
144 49
173 147
229 49
fn=runtime.gcStart
144 49
173 147
229 49
fn=runtime.goschedImpl
144 100
173 500
229 200
fn=runtime.injectglist
144 49
173 147
229 49
fn=runtime.newproc1
23 17
144 17
173 51
229 51
fn=runtime.park_m
144 124
173 496
229 372
fn=runtime.procresize
144 100
173 300
176 1
229 100
fn=runtime.ready
144 56
173 168
229 112
fn=runtime.reentersyscall
144 71
173 355
229 142
fn=runtime.releasep
144 281
173 843
229 281
fn=runtime.retake
144 5
173 15
229 5
fn=runtime.startTheWorldWithSema
144 98
173 294
229 98
fn=runtime.stopTheWorldWithSema
144 196
173 686
229 196
238 1176
fl=/usr/lib/go-1.22/src/runtime/traceback.go
fn=runtime.(*unwinder).finishInternal
518 4170
519 834
561 834
562 6672
567 2502
fn=runtime.(*unwinder).initAt
131 5004
133 5838
150 4170
151 2502
152 1
153 1
158 833
159 1666
166 4170
167 1668
168 1668
175 1668
199 1668
200 834
211 1668
214 5004
215 8340
216 834
217 3336
219 6672
222 7508
223 3336
224 2502
fn=runtime.(*unwinder).next
439 14445
440 2889
441 11943
442 2055
445 7833
446 834
447 2502
449 4110
450 2055
476 10275
483 16440
484 2055
487 6165
491 4110
492 4110
493 4110
494 2055
495 4110
496 2055
512 8220
513 6165
fn=runtime.(*unwinder).resolveInternal
251 14445
252 2889
255 2889
256 17334
264 2889
265 8667
272 2889
276 1
281 5778
287 11556
325 17334
328 8667
333 11556
335 4557
336 4110
363 5778
375 4110
376 4110
377 4110
382 2889
385 5778
405 5778
406 4056
409 5778
420 5778
421 5778
437 8667
fn=runtime.copystack
128 6
227 13
fn=runtime.isSystemGoroutine
1319 85
1321 51
1322 36
1325 117
1326 4
1328 32
1331 1
1336 5
1338 60
fn=runtime.scanstack
128 5831
227 3710
fl=/usr/lib/go-1.22/src/runtime/type.go
fn=runtime.typelinksinit
254 6
255 2
256 3
fl=/usr/lib/go-1.22/src/runtime/vdso_linux.go
fn=runtime.vdsoauxv
268 132
270 44
282 66
fl=/usr/lib/go-1.22/src/strconv/decimal.go
fn=strconv.(*decimal).Assign
72 1098
73 10
75 84
81 252
82 252
86 6972
87 4032
88 4032
89 5376
90 1344
95 1428
96 5712
97 9408
98 1344
100 168
101 84
102 252
fn=strconv.(*decimal).Round
72 592
73 4
75 46
339 460
347 84
354 252
355 504
358 168
359 38
361 46
363 252
370 46
371 46
381 182
382 48
383 96
384 76
385 76
fn=strconv.(*decimal).Shift
315 420
317 252
319 168
325 84
326 168
330 252
332 252
fn=strconv.rightShift
72 1008
75 84
110 252
116 15682
117 2836
118 168
123 712
124 188
125 94
127 84
129 4002
130 4002
132 336
134 504
137 252
147 9208
148 13434
149 4478
150 8956
151 13434
152 8956
156 13434
159 84
160 168
161 252
fl=/usr/lib/go-1.22/src/strconv/ftoa.go
fn=fmt.(*fmt).fmtFloat
54 672
fn=strconv.bigFtoa
163 504
164 756
165 336
166 672
167 252
168 420
169 840
183 168
184 168
186 168
187 420
188 84
194 1008
196 1512
fn=strconv.fmtF
434 924
436 168
441 252
448 420
452 252
453 504
454 1764
456 3024
457 3444
459 2520
463 252
fn=strconv.formatDigits
199 588
200 84
201 168
203 168
204 1092
205 84
fn=strconv.genericFtoa
57 588
61 756
64 168
65 84
71 1428
72 1092
73 840
76 168
89 168
95 84
97 84
100 252
103 336
107 168
111 336
114 252
115 84
130 168
156 168
157 924
fl=/usr/lib/go-1.22/src/sync/atomic/type.go
fn=internal/poll.(*pollDesc).init
121 2
fn=sync.(*Once).doSlow
121 1
fn=sync.(*Once).doSlow.deferwrap2
124 2
fl=/usr/lib/go-1.22/src/sync/atomic/value.go
fn=internal/testlog.Open
30 1
31 5
fl=/usr/lib/go-1.22/src/sync/map.go
fn=sync.init
78 8
fl=/usr/lib/go-1.22/src/sync/mutex.go
fn=sync.(*Once).doSlow
83 3
fn=sync.(*Once).doSlow.deferwrap1
219 3
220 2
fn=sync.(*Pool).pinSlow
83 189
fn=sync.(*Pool).pinSlow.deferwrap1
219 63
220 42
fl=/usr/lib/go-1.22/src/sync/once.go
fn=internal/poll.(*pollDesc).init
63 4
65 3
fn=sync.(*Once).doSlow
69 7
70 5
71 7
72 2
73 8
74 4
76 20
fn=sync.(*Once).doSlow.deferwrap1
71 12
fn=sync.(*Once).doSlow.deferwrap2
73 5
fl=/usr/lib/go-1.22/src/sync/pool.go
fn=sync.(*Pool).Get
128 635
132 148
133 254
134 562
135 381
139 42
140 42
141 63
144 254
151 864
152 30
154 493
fn=sync.(*Pool).Put
96 1016
97 508
108 127
109 254
110 1070
114 127
118 381
fn=sync.(*Pool).getSlow
157 105
159 42
160 315
162 1617
163 1764
164 1512
172 273
173 42
174 75
176 6
177 6
178 24
179 24
180 30
288 264
fn=sync.(*Pool).pin
199 1270
203 762
207 254
212 508
213 233
214 508
215 699
217 105
288 699
fn=sync.(*Pool).pinSlow
220 210
223 21
224 21
225 168
226 63
228 63
230 21
233 42
234 465
237 84
238 105
239 126
240 84
241 399
fn=sync.(*Pool).pinSlow.deferwrap1
225 252
fn=sync.init.0
283 5
284 2
285 4
fn=sync.poolCleanup
244 196
252 419
253 76
254 19
258 394
259 80
260 40
261 60
262 20
267 490
268 98
fl=/usr/lib/go-1.22/src/sync/poolqueue.go
fn=sync.(*poolChain).popHead
258 105
259 21
260 63
268 126
fn=sync.(*poolChain).popTail
271 1260
272 252
273 504
274 1512
fl=/usr/lib/go-1.22/src/sync/runtime.go
fn=sync.init.1
51 5
53 2
54 3
fl=/usr/lib/go-1.22/src/syscall/env_unix.go
fn=syscall.init
29 6
fl=/usr/lib/go-1.22/src/syscall/exec_unix.go
fn=syscall.SetNonblock
105 10
106 6
107 8
110 10
113 6
114 4
116 2
118 12
119 4
fl=/usr/lib/go-1.22/src/syscall/rlimit.go
fn=syscall.init.0
30 5
31 3
32 9
39 3
fl=/usr/lib/go-1.22/src/syscall/syscall.go
fn=syscall.ByteSliceFromString
48 5
49 10
52 9
54 7
fn=syscall.openat
68 3
69 5
72 4
fl=/usr/lib/go-1.22/src/syscall/syscall_linux.go
fn=os.open
280 6
fn=syscall.RawSyscall
61 3
62 7
fn=syscall.Syscall
68 210
69 140
82 770
83 70
84 700
fn=syscall.Syscall6
90 3
91 1
92 11
93 1
94 13
fn=syscall.init
1263 6
fl=/usr/lib/go-1.22/src/syscall/syscall_unix.go
fn=internal/poll.(*FD).Write
209 325
fl=/usr/lib/go-1.22/src/syscall/zsyscall_linux_amd64.go
fn=syscall.Close
334 5
335 6
336 2
337 2
339 5
fn=syscall.Getrlimit
1163 5
1164 6
1165 2
1166 2
1168 5
fn=syscall.fcntl
431 20
432 20
434 8
435 8
437 20
fn=syscall.openat
92 6
94 2
95 2
98 10
100 2
103 7
fn=syscall.write
957 390
959 130
964 455
966 130
967 130
969 325
fl=/usr/lib/go-1.22/src/time/format.go
fn=time.init
1573 1
fl=/usr/lib/go-1.22/src/time/time.go
fn=main.columnMajorAccess
794 84
795 105
796 147
fn=main.rowMajorAccess
794 21
795 147
796 147
fn=time.Now
1131 168
1132 42
1133 42
1134 84
1135 210
1141 378
fn=time.Since
917 126
918 84
921 126
929 252
930 126
932 210
fn=time.init
1128 6
fl=/usr/lib/go-1.22/src/unicode/graphic.go
fn=unicode.IsSpace
128 330
130 132
131 66
132 330
135 264
fl=/usr/lib/go-1.22/src/unicode/tables.go
fn=unicode.init
9 1
3802 2
5999 1
8050 66
8350 39
fl=/usr/lib/go-1.22/src/unicode/utf8/utf8.go
fn=encoding/csv.(*Writer).Write
577 86
fn=unicode/utf8.DecodeRuneInString
199 264
201 132
204 66
205 132
206 132
210 132
211 660
fl=???
fn=errors.init
0 4
fn=io/fs.init
0 3
fn=os.init
0 4
fn=reflect.init
0 4
fn=runtime.args.abi0
0 2
fn=runtime.check.abi0
0 1
fn=runtime.init
0 4
fn=runtime.mstart0.abi0
0 6
fn=runtime.newproc.abi0
0 2
fn=runtime.newstack.abi0
0 173
fn=runtime.osinit.abi0
0 1
fn=runtime.schedinit.abi0
0 1
fn=runtime.wbBufFlush.abi0
0 23
fn=sync.init
0 4
fn=sync/atomic.StoreUintptr
0 42
fn=syscall.init
0 3
fn=time.init
0 3
fn=unicode.init
0 4
summary: 143627626391
